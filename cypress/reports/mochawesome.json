{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-08-21T11:36:22.232Z",
    "end": "2021-08-21T11:38:01.594Z",
    "duration": 99362,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0cf63678-cdfb-446d-8677-87fcf915001c",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c90b7cf3-b83b-4b21-8ece-8a9a68c913b2",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 2699,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "ef374af9-cdf8-4e2d-80bb-32a53c610edc",
              "parentUUID": "c90b7cf3-b83b-4b21-8ece-8a9a68c913b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ef374af9-cdf8-4e2d-80bb-32a53c610edc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2699,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3c15fcec-433b-48bd-a53e-4977344c03ad",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 340,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "38ab6b2d-e97a-4cff-912f-4decb3d126fb",
              "parentUUID": "3c15fcec-433b-48bd-a53e-4977344c03ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 698,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "02a1e2a8-f972-42bf-b2f9-162fa2f790f2",
              "parentUUID": "3c15fcec-433b-48bd-a53e-4977344c03ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 448,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "95a6f475-a7ca-48bf-8f9b-99b0c81f1179",
              "parentUUID": "3c15fcec-433b-48bd-a53e-4977344c03ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 459,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "dc92f463-8d33-4017-b754-602d57f4a6eb",
              "parentUUID": "3c15fcec-433b-48bd-a53e-4977344c03ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "ceeb9829-d597-478e-805e-b990c8f91605",
              "parentUUID": "3c15fcec-433b-48bd-a53e-4977344c03ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 298,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "a632b224-7ca0-463e-9396-b1cd197f1ce4",
              "parentUUID": "3c15fcec-433b-48bd-a53e-4977344c03ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 218,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "9930844d-266c-41b4-a91e-44d377295d53",
              "parentUUID": "3c15fcec-433b-48bd-a53e-4977344c03ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "38ab6b2d-e97a-4cff-912f-4decb3d126fb",
            "02a1e2a8-f972-42bf-b2f9-162fa2f790f2",
            "95a6f475-a7ca-48bf-8f9b-99b0c81f1179",
            "dc92f463-8d33-4017-b754-602d57f4a6eb",
            "ceeb9829-d597-478e-805e-b990c8f91605",
            "a632b224-7ca0-463e-9396-b1cd197f1ce4",
            "9930844d-266c-41b4-a91e-44d377295d53"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2671,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4028f9d9-3d38-4d02-b504-318d78268ce7",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 171,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "df385bff-084b-4f82-b2fa-bdba17ae0217",
              "parentUUID": "4028f9d9-3d38-4d02-b504-318d78268ce7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 961,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "f2665736-cfde-4693-b2cf-4362d83cde22",
              "parentUUID": "4028f9d9-3d38-4d02-b504-318d78268ce7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "df385bff-084b-4f82-b2fa-bdba17ae0217",
            "f2665736-cfde-4693-b2cf-4362d83cde22"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1132,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "09fc13d3-23b7-43ef-872e-aa815d97301f",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 265,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "d44465ef-f3f3-465a-9187-7ffce398cdbb",
              "parentUUID": "09fc13d3-23b7-43ef-872e-aa815d97301f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 322,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "170c15eb-492a-469a-9756-5c9d93c2a8e7",
              "parentUUID": "09fc13d3-23b7-43ef-872e-aa815d97301f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 455,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "b3e79431-f018-41c8-a16f-f9403b75b58f",
              "parentUUID": "09fc13d3-23b7-43ef-872e-aa815d97301f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 218,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "39581424-be03-4cb5-bfaa-f61ba5d07977",
              "parentUUID": "09fc13d3-23b7-43ef-872e-aa815d97301f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d44465ef-f3f3-465a-9187-7ffce398cdbb",
            "170c15eb-492a-469a-9756-5c9d93c2a8e7",
            "b3e79431-f018-41c8-a16f-f9403b75b58f",
            "39581424-be03-4cb5-bfaa-f61ba5d07977"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1260,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c67804f3-3aa6-4c71-897d-64cbc652d6a9",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 718,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "8936309d-1d3a-45fd-8b05-e2036a9d9f62",
              "parentUUID": "c67804f3-3aa6-4c71-897d-64cbc652d6a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 701,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "beccf7ed-7557-4073-8e63-1222c15de418",
              "parentUUID": "c67804f3-3aa6-4c71-897d-64cbc652d6a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8936309d-1d3a-45fd-8b05-e2036a9d9f62",
            "beccf7ed-7557-4073-8e63-1222c15de418"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1419,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "63a5aef3-8141-47f4-a4e8-c37bf6b8212a",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "f4f3a8f9-90fb-442a-997c-c648536f7bd3",
              "parentUUID": "63a5aef3-8141-47f4-a4e8-c37bf6b8212a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "5aaeec45-a3a0-41c6-921e-762ecfbf2f1e",
              "parentUUID": "63a5aef3-8141-47f4-a4e8-c37bf6b8212a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f4f3a8f9-90fb-442a-997c-c648536f7bd3",
            "5aaeec45-a3a0-41c6-921e-762ecfbf2f1e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 320,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e8eb1774-d84e-4d29-bad2-abe2582d3108",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 697,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "1cf562d2-3f4e-48dc-a1e5-3cdbbb86642d",
              "parentUUID": "e8eb1774-d84e-4d29-bad2-abe2582d3108",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9923,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "7a8e9622-17a7-42a1-b676-389ebb42a9a1",
              "parentUUID": "e8eb1774-d84e-4d29-bad2-abe2582d3108",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1cf562d2-3f4e-48dc-a1e5-3cdbbb86642d",
            "7a8e9622-17a7-42a1-b676-389ebb42a9a1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10620,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7f2c1463-96fd-40d0-b681-eda70590c4dc",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2751,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "3743cbb1-7984-4ae4-bdce-fc58c4e480bb",
              "parentUUID": "7f2c1463-96fd-40d0-b681-eda70590c4dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9873,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "715fa6fb-60f2-45bf-876e-2c4f8ac2060b",
              "parentUUID": "7f2c1463-96fd-40d0-b681-eda70590c4dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 3263,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "7263aa2a-8f76-4514-b4a9-5e53c41a49fd",
              "parentUUID": "7f2c1463-96fd-40d0-b681-eda70590c4dc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3743cbb1-7984-4ae4-bdce-fc58c4e480bb",
            "715fa6fb-60f2-45bf-876e-2c4f8ac2060b",
            "7263aa2a-8f76-4514-b4a9-5e53c41a49fd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15887,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "68c2c535-de8e-45a4-9874-7a38b7a09552",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 361,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "efba3678-b594-4362-a5d0-d1a883b411b4",
              "parentUUID": "68c2c535-de8e-45a4-9874-7a38b7a09552",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 182,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "5e941fe0-4a44-4b32-840a-7228e8f28934",
              "parentUUID": "68c2c535-de8e-45a4-9874-7a38b7a09552",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "3b30d07a-1269-4da1-ba72-93f71a82ab14",
              "parentUUID": "68c2c535-de8e-45a4-9874-7a38b7a09552",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 3032,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "a77c29c8-02bb-4460-9ddf-28ad35c7305d",
              "parentUUID": "68c2c535-de8e-45a4-9874-7a38b7a09552",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "efba3678-b594-4362-a5d0-d1a883b411b4",
            "5e941fe0-4a44-4b32-840a-7228e8f28934",
            "3b30d07a-1269-4da1-ba72-93f71a82ab14",
            "a77c29c8-02bb-4460-9ddf-28ad35c7305d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3707,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "316c1254-92cd-456f-bf0b-b7f3e5f3ccd9",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4667,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45101/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45101/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45101/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45101/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45101/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45101/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45101/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45101/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45101/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1987a45c-0c5d-438a-a205-6e9011b72aa7",
              "parentUUID": "316c1254-92cd-456f-bf0b-b7f3e5f3ccd9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4613,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45101/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45101/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45101/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45101/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45101/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45101/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45101/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45101/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45101/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0f06c1da-75a8-4377-af22-57e610c7c87a",
              "parentUUID": "316c1254-92cd-456f-bf0b-b7f3e5f3ccd9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4673,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45101/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45101/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45101/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45101/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45101/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45101/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45101/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45101/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45101/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fd989ff2-ad26-45ed-b14f-cd02fbb7d2fc",
              "parentUUID": "316c1254-92cd-456f-bf0b-b7f3e5f3ccd9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4624,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45101/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45101/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45101/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45101/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45101/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45101/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45101/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45101/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45101/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b16694f7-825c-47f6-b76b-0aa396de0899",
              "parentUUID": "316c1254-92cd-456f-bf0b-b7f3e5f3ccd9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4664,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45101/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45101/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45101/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45101/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45101/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45101/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45101/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45101/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45101/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fee1294f-ca93-4158-90b8-8d74ff1624a3",
              "parentUUID": "316c1254-92cd-456f-bf0b-b7f3e5f3ccd9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4604,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45101/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45101/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45101/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45101/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45101/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45101/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45101/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45101/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45101/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e0cc281e-30a0-42d9-80eb-6c856ce3f8dc",
              "parentUUID": "316c1254-92cd-456f-bf0b-b7f3e5f3ccd9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4769,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45101/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45101/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45101/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45101/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45101/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45101/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45101/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45101/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45101/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "769309fa-d106-493c-bb0b-e8c0af64c6e3",
              "parentUUID": "316c1254-92cd-456f-bf0b-b7f3e5f3ccd9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4704,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45101/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45101/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45101/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45101/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45101/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45101/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45101/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45101/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45101/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "19575226-942a-44d1-98af-47c0fbbd90fd",
              "parentUUID": "316c1254-92cd-456f-bf0b-b7f3e5f3ccd9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4582,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45101/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45101/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45101/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45101/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45101/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45101/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45101/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45101/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45101/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "15b42935-d9da-420e-aec8-cd105f77ba86",
              "parentUUID": "316c1254-92cd-456f-bf0b-b7f3e5f3ccd9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "1987a45c-0c5d-438a-a205-6e9011b72aa7",
            "0f06c1da-75a8-4377-af22-57e610c7c87a",
            "fd989ff2-ad26-45ed-b14f-cd02fbb7d2fc",
            "b16694f7-825c-47f6-b76b-0aa396de0899",
            "fee1294f-ca93-4158-90b8-8d74ff1624a3",
            "e0cc281e-30a0-42d9-80eb-6c856ce3f8dc",
            "769309fa-d106-493c-bb0b-e8c0af64c6e3",
            "19575226-942a-44d1-98af-47c0fbbd90fd",
            "15b42935-d9da-420e-aec8-cd105f77ba86"
          ],
          "pending": [],
          "skipped": [],
          "duration": 41900,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4e144fbf-d346-4e63-a281-1b37dc7cef55",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4676,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45101/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45101/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45101/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45101/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45101/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45101/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45101/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45101/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45101/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "78cc35fa-9bac-4b14-8257-9076c3df5c64",
              "parentUUID": "4e144fbf-d346-4e63-a281-1b37dc7cef55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4731,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45101/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45101/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45101/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45101/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45101/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45101/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45101/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45101/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45101/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b2a8bf7a-6fef-465d-a4b4-b9a7f2882543",
              "parentUUID": "4e144fbf-d346-4e63-a281-1b37dc7cef55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4803,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45101/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45101/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45101/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45101/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45101/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45101/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45101/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45101/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45101/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45101/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7495288d-0569-4515-906c-a9a400f4cb0b",
              "parentUUID": "4e144fbf-d346-4e63-a281-1b37dc7cef55",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "78cc35fa-9bac-4b14-8257-9076c3df5c64",
            "b2a8bf7a-6fef-465d-a4b4-b9a7f2882543",
            "7495288d-0569-4515-906c-a9a400f4cb0b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14210,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c03ca464-1384-4876-bc82-1c73d0e56748",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 774,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:45101/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:45101/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:45101/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:45101/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:45101/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:45101/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:45101/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:45101/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45101/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45101/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:45101/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45101/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "d562168a-65ce-479a-b898-6d82b939c83c",
              "parentUUID": "c03ca464-1384-4876-bc82-1c73d0e56748",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 602,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:45101/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:45101/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:45101/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:45101/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:45101/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:45101/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:45101/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:45101/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45101/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45101/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:45101/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45101/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45101/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "08c414b6-0b87-4763-bbe9-98e866034e3f",
              "parentUUID": "c03ca464-1384-4876-bc82-1c73d0e56748",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d562168a-65ce-479a-b898-6d82b939c83c",
            "08c414b6-0b87-4763-bbe9-98e866034e3f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1376,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}