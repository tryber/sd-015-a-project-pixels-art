{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-08-13T22:21:36.591Z",
    "end": "2021-08-13T22:22:51.851Z",
    "duration": 75260,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5d6a3cec-c3fc-4f19-bc0b-526444229725",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a880ef1d-9325-4fc3-bb3c-7203fd0b15b9",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 621,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "ec3796c6-7e5c-4179-b924-235f1d06b4c3",
              "parentUUID": "a880ef1d-9325-4fc3-bb3c-7203fd0b15b9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ec3796c6-7e5c-4179-b924-235f1d06b4c3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 621,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e1fb3c0e-074e-4698-b918-dab3d9cfb381",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "ce00019a-6950-4725-9862-d7c5b787a7c5",
              "parentUUID": "e1fb3c0e-074e-4698-b918-dab3d9cfb381",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 253,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "55215465-728d-4474-b792-e32ec4cd278c",
              "parentUUID": "e1fb3c0e-074e-4698-b918-dab3d9cfb381",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 448,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "3bbace00-2aa0-482b-8ee5-4fe357ce14ed",
              "parentUUID": "e1fb3c0e-074e-4698-b918-dab3d9cfb381",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "c2d64b45-6010-49fc-8b0b-5d2abf2feda6",
              "parentUUID": "e1fb3c0e-074e-4698-b918-dab3d9cfb381",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "50993294-56d1-44be-8284-d98b09f2ce67",
              "parentUUID": "e1fb3c0e-074e-4698-b918-dab3d9cfb381",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "5603e021-317d-4f51-a7e8-c2cfa59b0947",
              "parentUUID": "e1fb3c0e-074e-4698-b918-dab3d9cfb381",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "f941bc3f-3da3-4e39-ab3c-e8f370dec40c",
              "parentUUID": "e1fb3c0e-074e-4698-b918-dab3d9cfb381",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce00019a-6950-4725-9862-d7c5b787a7c5",
            "55215465-728d-4474-b792-e32ec4cd278c",
            "3bbace00-2aa0-482b-8ee5-4fe357ce14ed",
            "c2d64b45-6010-49fc-8b0b-5d2abf2feda6",
            "50993294-56d1-44be-8284-d98b09f2ce67",
            "5603e021-317d-4f51-a7e8-c2cfa59b0947",
            "f941bc3f-3da3-4e39-ab3c-e8f370dec40c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1610,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e69b1065-4930-4a06-b108-fcf8f4745dc6",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "4b689379-f3a3-4b47-b54b-352f989c66fb",
              "parentUUID": "e69b1065-4930-4a06-b108-fcf8f4745dc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 273,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "01e90381-84d6-4750-b74e-5ed5ce46d301",
              "parentUUID": "e69b1065-4930-4a06-b108-fcf8f4745dc6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4b689379-f3a3-4b47-b54b-352f989c66fb",
            "01e90381-84d6-4750-b74e-5ed5ce46d301"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 429,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bb9932f1-5315-47fd-bd39-80e23cb4bcc8",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "0234853e-4bff-4aea-bfac-c65c192cb51c",
              "parentUUID": "bb9932f1-5315-47fd-bd39-80e23cb4bcc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "978a9f91-a74e-49e6-9936-921879f45b9f",
              "parentUUID": "bb9932f1-5315-47fd-bd39-80e23cb4bcc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 255,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "d2f05e37-a2ab-43ae-9850-02c399060e14",
              "parentUUID": "bb9932f1-5315-47fd-bd39-80e23cb4bcc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "8db93c2a-696e-48ad-9a47-642f48475f15",
              "parentUUID": "bb9932f1-5315-47fd-bd39-80e23cb4bcc8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0234853e-4bff-4aea-bfac-c65c192cb51c",
            "978a9f91-a74e-49e6-9936-921879f45b9f",
            "d2f05e37-a2ab-43ae-9850-02c399060e14",
            "8db93c2a-696e-48ad-9a47-642f48475f15"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 743,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "62ce34d7-b8e3-4b3f-b3e2-6e5c4b112ee6",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 290,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "37eb3381-f5c5-4cd6-9d58-a4ec31cb0a77",
              "parentUUID": "62ce34d7-b8e3-4b3f-b3e2-6e5c4b112ee6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 321,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "620bbdce-c481-48d7-8d68-541c67aabcbc",
              "parentUUID": "62ce34d7-b8e3-4b3f-b3e2-6e5c4b112ee6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "37eb3381-f5c5-4cd6-9d58-a4ec31cb0a77",
            "620bbdce-c481-48d7-8d68-541c67aabcbc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 611,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d4d64a7f-26a4-4b1a-b3e5-197325dcf648",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "268c58a1-5b52-45e2-8fce-97d08130388a",
              "parentUUID": "d4d64a7f-26a4-4b1a-b3e5-197325dcf648",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "c179e0a2-23b8-4c97-811a-5d8ca837d1e0",
              "parentUUID": "d4d64a7f-26a4-4b1a-b3e5-197325dcf648",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "268c58a1-5b52-45e2-8fce-97d08130388a",
            "c179e0a2-23b8-4c97-811a-5d8ca837d1e0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 267,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ae9d0e6b-d3fe-4f13-ac0e-ffca8326215e",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 456,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "7b6b6aeb-7bb6-423b-a093-ab53f7939595",
              "parentUUID": "ae9d0e6b-d3fe-4f13-ac0e-ffca8326215e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8211,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "8f19de02-baa4-486a-b7a4-bbbc5ab26756",
              "parentUUID": "ae9d0e6b-d3fe-4f13-ac0e-ffca8326215e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b6b6aeb-7bb6-423b-a093-ab53f7939595",
            "8f19de02-baa4-486a-b7a4-bbbc5ab26756"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8667,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e356f6a4-a6b8-4cb1-9c2d-3fa6f6dd54a9",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "bbf74e78-d028-440a-a854-2512fe5f6908",
              "parentUUID": "e356f6a4-a6b8-4cb1-9c2d-3fa6f6dd54a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8168,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "5801142f-e16f-4b50-acaa-7b189b873dc3",
              "parentUUID": "e356f6a4-a6b8-4cb1-9c2d-3fa6f6dd54a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1630,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "d1ef4150-e028-4970-abdd-5006965633fb",
              "parentUUID": "e356f6a4-a6b8-4cb1-9c2d-3fa6f6dd54a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bbf74e78-d028-440a-a854-2512fe5f6908",
            "5801142f-e16f-4b50-acaa-7b189b873dc3",
            "d1ef4150-e028-4970-abdd-5006965633fb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11941,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "778fbfeb-0e06-4eb3-a2cd-7785efda48ef",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "1d1b54c1-60b7-44f6-a223-e1796faf8e6d",
              "parentUUID": "778fbfeb-0e06-4eb3-a2cd-7785efda48ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4542,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<div#pixel-board>' to be below of { Object (0, length, ...) }",
                "estack": "CypressError: Timed out retrying: expected '<div#pixel-board>' to be below of { Object (0, length, ...) }\n    at cypressErr (http://localhost:59274/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59274/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59274/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59274/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59274/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59274/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59274/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59274/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59274/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59274/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59274/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d58445e2-30a7-42d8-8b04-129e030e9e35",
              "parentUUID": "778fbfeb-0e06-4eb3-a2cd-7785efda48ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "4b7f6537-2934-4013-8d90-bfdf8cc43eea",
              "parentUUID": "778fbfeb-0e06-4eb3-a2cd-7785efda48ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 6616,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgb(0, 128, 0)'",
                "estack": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgb(0, 128, 0)'\n    at cypressErr (http://localhost:59274/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59274/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59274/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59274/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59274/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59274/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59274/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59274/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59274/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59274/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59274/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c3fe53e5-ccd0-45a1-adf4-d9a22dd238f6",
              "parentUUID": "778fbfeb-0e06-4eb3-a2cd-7785efda48ef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1d1b54c1-60b7-44f6-a223-e1796faf8e6d",
            "4b7f6537-2934-4013-8d90-bfdf8cc43eea"
          ],
          "failures": [
            "d58445e2-30a7-42d8-8b04-129e030e9e35",
            "c3fe53e5-ccd0-45a1-adf4-d9a22dd238f6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 11510,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c5c7aa45-c2c5-493a-8053-3f048955a6d3",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 236,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "56937b16-a049-4274-9b6d-339a2f80f6e4",
              "parentUUID": "c5c7aa45-c2c5-493a-8053-3f048955a6d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "18346f2d-14ff-4264-b488-8592ae2cfba1",
              "parentUUID": "c5c7aa45-c2c5-493a-8053-3f048955a6d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4434,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:59274/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59274/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59274/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59274/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59274/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59274/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59274/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59274/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59274/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59274/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59274/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6e5b2c46-0bd3-45b5-bb3b-a67bf57b87be",
              "parentUUID": "c5c7aa45-c2c5-493a-8053-3f048955a6d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4561,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find content: '/vqv/i' within the element: <button#generate-board> but never did.",
                "estack": "CypressError: Timed out retrying: Expected to find content: '/vqv/i' within the element: <button#generate-board> but never did.\n    at cypressErr (http://localhost:59274/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59274/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59274/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59274/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59274/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59274/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59274/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59274/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59274/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59274/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59274/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a1cf7d55-9f62-459a-9526-b0bd45d6c908",
              "parentUUID": "c5c7aa45-c2c5-493a-8053-3f048955a6d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4591,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<div#pixel-board>' to be below of { Object (0, length, ...) }",
                "estack": "CypressError: Timed out retrying: expected '<div#pixel-board>' to be below of { Object (0, length, ...) }\n    at cypressErr (http://localhost:59274/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59274/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59274/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59274/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59274/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59274/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59274/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59274/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59274/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59274/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59274/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b382a8ca-89bb-4cb1-bf0c-9f3b1fba56a5",
              "parentUUID": "c5c7aa45-c2c5-493a-8053-3f048955a6d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 307,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "e3984190-07ce-43bb-8260-e2c63519bd65",
              "parentUUID": "c5c7aa45-c2c5-493a-8053-3f048955a6d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 604,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:59274/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:59274/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:59274/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:59274/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:59274/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:59274/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:59274/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:59274/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59274/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59274/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:59274/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59274/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "31abc84a-0621-488f-ad79-4c0f3f951d81",
              "parentUUID": "c5c7aa45-c2c5-493a-8053-3f048955a6d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4850,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.\n    at cypressErr (http://localhost:59274/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59274/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59274/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59274/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59274/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59274/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59274/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59274/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59274/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59274/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59274/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "27a3521c-d9ca-4fdd-8293-f2c8fc3eb61e",
              "parentUUID": "c5c7aa45-c2c5-493a-8053-3f048955a6d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 5030,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.\n    at cypressErr (http://localhost:59274/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59274/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59274/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59274/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59274/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59274/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59274/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59274/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59274/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59274/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59274/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "79492c31-4eb7-4119-9344-37bc2ddb3cdd",
              "parentUUID": "c5c7aa45-c2c5-493a-8053-3f048955a6d3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "56937b16-a049-4274-9b6d-339a2f80f6e4",
            "18346f2d-14ff-4264-b488-8592ae2cfba1",
            "e3984190-07ce-43bb-8260-e2c63519bd65"
          ],
          "failures": [
            "6e5b2c46-0bd3-45b5-bb3b-a67bf57b87be",
            "a1cf7d55-9f62-459a-9526-b0bd45d6c908",
            "b382a8ca-89bb-4cb1-bf0c-9f3b1fba56a5",
            "31abc84a-0621-488f-ad79-4c0f3f951d81",
            "27a3521c-d9ca-4fdd-8293-f2c8fc3eb61e",
            "79492c31-4eb7-4119-9344-37bc2ddb3cdd"
          ],
          "pending": [],
          "skipped": [],
          "duration": 24730,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3242986a-1d83-44ab-a0ac-b8c8d7bf28e4",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 5473,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:59274/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59274/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59274/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59274/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59274/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59274/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59274/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59274/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59274/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59274/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59274/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "067dbfff-b4bc-4c38-a2ff-496b16498f8f",
              "parentUUID": "3242986a-1d83-44ab-a0ac-b8c8d7bf28e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 832,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "fd77c176-ac7e-4276-b992-80bd53e9135d",
              "parentUUID": "3242986a-1d83-44ab-a0ac-b8c8d7bf28e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 5070,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:59274/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59274/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59274/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59274/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59274/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59274/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59274/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59274/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59274/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59274/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59274/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f37ad1ac-25f5-4274-9108-8307993ec2d3",
              "parentUUID": "3242986a-1d83-44ab-a0ac-b8c8d7bf28e4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fd77c176-ac7e-4276-b992-80bd53e9135d"
          ],
          "failures": [
            "067dbfff-b4bc-4c38-a2ff-496b16498f8f",
            "f37ad1ac-25f5-4274-9108-8307993ec2d3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 11375,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e471f790-a28e-48b1-9e61-f93ac3189554",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 762,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:59274/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:59274/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:59274/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:59274/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:59274/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:59274/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:59274/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:59274/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59274/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59274/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:59274/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59274/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "ce7b9022-641e-465a-bc8f-b224ff46e135",
              "parentUUID": "e471f790-a28e-48b1-9e61-f93ac3189554",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 708,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:59274/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:59274/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:59274/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:59274/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:59274/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:59274/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:59274/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:59274/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59274/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59274/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:59274/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59274/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59274/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "64519592-673d-4381-8709-43fadba20f0f",
              "parentUUID": "e471f790-a28e-48b1-9e61-f93ac3189554",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ce7b9022-641e-465a-bc8f-b224ff46e135",
            "64519592-673d-4381-8709-43fadba20f0f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1470,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}