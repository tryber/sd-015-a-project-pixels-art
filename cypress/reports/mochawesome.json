{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-08-13T22:58:58.413Z",
    "end": "2021-08-13T23:00:13.836Z",
    "duration": 75423,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cd2732b4-9907-4346-b64d-d0060e78ca02",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6f0df5b5-870d-4d28-b868-9bd26320189f",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "1b7e7ec0-92a4-4c00-8cbc-ebd2a512899f",
              "parentUUID": "6f0df5b5-870d-4d28-b868-9bd26320189f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1b7e7ec0-92a4-4c00-8cbc-ebd2a512899f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 117,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "64b61564-7612-4412-82c3-a2548e5774cf",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 58,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "00cce11a-7e0d-4254-89cf-6e2e758f946d",
              "parentUUID": "64b61564-7612-4412-82c3-a2548e5774cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 89,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "10c6e97a-db22-4c32-a9c5-748bdc4469d6",
              "parentUUID": "64b61564-7612-4412-82c3-a2548e5774cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 86,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "d012c168-1744-4e2d-8ad8-030204bf38af",
              "parentUUID": "64b61564-7612-4412-82c3-a2548e5774cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 72,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "2df112fa-a8c7-43ba-b061-af45476d2972",
              "parentUUID": "64b61564-7612-4412-82c3-a2548e5774cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "ea802eae-10b0-4279-b585-38f6ad904aba",
              "parentUUID": "64b61564-7612-4412-82c3-a2548e5774cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "dd1fdc91-8daf-4074-8938-2596eb23d3d7",
              "parentUUID": "64b61564-7612-4412-82c3-a2548e5774cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "762dd321-0a09-4ede-afff-23b75a95db2c",
              "parentUUID": "64b61564-7612-4412-82c3-a2548e5774cf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "00cce11a-7e0d-4254-89cf-6e2e758f946d",
            "10c6e97a-db22-4c32-a9c5-748bdc4469d6",
            "d012c168-1744-4e2d-8ad8-030204bf38af",
            "2df112fa-a8c7-43ba-b061-af45476d2972",
            "ea802eae-10b0-4279-b585-38f6ad904aba",
            "dd1fdc91-8daf-4074-8938-2596eb23d3d7",
            "762dd321-0a09-4ede-afff-23b75a95db2c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 575,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "af7dc3bd-4dde-4903-9513-1f26464fc9a0",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "dc2efbbd-c1b5-4134-a6cb-e97b10f3e4d1",
              "parentUUID": "af7dc3bd-4dde-4903-9513-1f26464fc9a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "f91488b5-6a2d-40f7-82bf-8fe75a4b11a4",
              "parentUUID": "af7dc3bd-4dde-4903-9513-1f26464fc9a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dc2efbbd-c1b5-4134-a6cb-e97b10f3e4d1",
            "f91488b5-6a2d-40f7-82bf-8fe75a4b11a4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 226,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "340bd727-39fc-463e-ae8b-d10e848729cd",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 63,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "ec7e4c33-2f8d-46a6-b183-3b3bf3b64502",
              "parentUUID": "340bd727-39fc-463e-ae8b-d10e848729cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "16b97798-6c29-4619-9cbe-3e9b91d88b3c",
              "parentUUID": "340bd727-39fc-463e-ae8b-d10e848729cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "1f13cf42-2e1f-4268-92da-451ea9097a9f",
              "parentUUID": "340bd727-39fc-463e-ae8b-d10e848729cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "c2073f9a-cc07-406b-b6de-d94caa0bc215",
              "parentUUID": "340bd727-39fc-463e-ae8b-d10e848729cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ec7e4c33-2f8d-46a6-b183-3b3bf3b64502",
            "16b97798-6c29-4619-9cbe-3e9b91d88b3c",
            "1f13cf42-2e1f-4268-92da-451ea9097a9f",
            "c2073f9a-cc07-406b-b6de-d94caa0bc215"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 342,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e53dae3a-4d9d-42e3-9caa-252a3fb5163d",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "07a2ff3c-deb1-40ce-bcc6-dd7fa7943ee5",
              "parentUUID": "e53dae3a-4d9d-42e3-9caa-252a3fb5163d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 214,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "0273d43b-c83b-422f-ae74-42d5d4b55333",
              "parentUUID": "e53dae3a-4d9d-42e3-9caa-252a3fb5163d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "07a2ff3c-deb1-40ce-bcc6-dd7fa7943ee5",
            "0273d43b-c83b-422f-ae74-42d5d4b55333"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 417,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d52817f8-6ef9-49bf-be17-7b06e6d4a495",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 59,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "7b71ce52-3a43-4cb7-820a-9d8206bf17b1",
              "parentUUID": "d52817f8-6ef9-49bf-be17-7b06e6d4a495",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "4771e48e-53ab-4701-81d3-524c9f2bdf97",
              "parentUUID": "d52817f8-6ef9-49bf-be17-7b06e6d4a495",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b71ce52-3a43-4cb7-820a-9d8206bf17b1",
            "4771e48e-53ab-4701-81d3-524c9f2bdf97"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 141,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f1407e3a-3d88-4600-9674-8d9e6ba5eacb",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 383,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "82b10ec0-de7e-4b57-92d7-9e970cc38dc1",
              "parentUUID": "f1407e3a-3d88-4600-9674-8d9e6ba5eacb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8168,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "85129f9c-5aaf-4e0a-afaa-668680e2f828",
              "parentUUID": "f1407e3a-3d88-4600-9674-8d9e6ba5eacb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "82b10ec0-de7e-4b57-92d7-9e970cc38dc1",
            "85129f9c-5aaf-4e0a-afaa-668680e2f828"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8551,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "23630d2e-f7ca-4077-a3ab-e0351f5ddeba",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 1960,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "3a54ad95-95dc-4463-8e0c-381e8e86f1c7",
              "parentUUID": "23630d2e-f7ca-4077-a3ab-e0351f5ddeba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 7739,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "c7dbe3a5-109e-465a-837a-f1c8515e23da",
              "parentUUID": "23630d2e-f7ca-4077-a3ab-e0351f5ddeba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1199,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "43cd4d29-2a60-46f7-b456-a293b522f527",
              "parentUUID": "23630d2e-f7ca-4077-a3ab-e0351f5ddeba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3a54ad95-95dc-4463-8e0c-381e8e86f1c7",
            "c7dbe3a5-109e-465a-837a-f1c8515e23da",
            "43cd4d29-2a60-46f7-b456-a293b522f527"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10898,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "38a561db-b460-4ab4-a232-d2a27c148503",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "90d7de42-a33b-4d5c-b6e1-75584ddfc9af",
              "parentUUID": "38a561db-b460-4ab4-a232-d2a27c148503",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 64,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "a9a0bf12-bc24-4aba-84d0-8ef5dc198704",
              "parentUUID": "38a561db-b460-4ab4-a232-d2a27c148503",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 44,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "f83c43fa-a57f-47fc-8de2-168e1dfc97a0",
              "parentUUID": "38a561db-b460-4ab4-a232-d2a27c148503",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "a4a98ec5-c5c7-4196-96a3-e9707e769833",
              "parentUUID": "38a561db-b460-4ab4-a232-d2a27c148503",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "90d7de42-a33b-4d5c-b6e1-75584ddfc9af",
            "a9a0bf12-bc24-4aba-84d0-8ef5dc198704",
            "f83c43fa-a57f-47fc-8de2-168e1dfc97a0",
            "a4a98ec5-c5c7-4196-96a3-e9707e769833"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2298,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6851344e-2bd6-4d37-b4b9-f09e8119d80c",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4193,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32905/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32905/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32905/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32905/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32905/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32905/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32905/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32905/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32905/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "78c1abaa-8563-458e-a30a-9eeec39c70c8",
              "parentUUID": "6851344e-2bd6-4d37-b4b9-f09e8119d80c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4280,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32905/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32905/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32905/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32905/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32905/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32905/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32905/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32905/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32905/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "27df6e62-0cb8-46dd-8974-a11f57657f56",
              "parentUUID": "6851344e-2bd6-4d37-b4b9-f09e8119d80c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4263,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32905/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32905/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32905/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32905/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32905/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32905/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32905/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32905/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32905/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0beb8e80-2f46-409e-ab29-6c1029e75d6d",
              "parentUUID": "6851344e-2bd6-4d37-b4b9-f09e8119d80c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4182,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32905/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32905/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32905/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32905/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32905/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32905/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32905/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32905/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32905/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d299b0ca-b3a3-4717-99e4-a4a50ba10db7",
              "parentUUID": "6851344e-2bd6-4d37-b4b9-f09e8119d80c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4191,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32905/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32905/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32905/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32905/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32905/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32905/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32905/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32905/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32905/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a6687b2c-47d8-470b-b120-1ca920d6abfd",
              "parentUUID": "6851344e-2bd6-4d37-b4b9-f09e8119d80c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4194,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32905/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32905/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32905/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32905/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32905/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32905/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32905/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32905/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32905/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a31a483a-b164-42d2-990d-75650385f397",
              "parentUUID": "6851344e-2bd6-4d37-b4b9-f09e8119d80c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4204,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32905/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32905/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32905/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32905/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32905/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32905/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32905/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32905/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32905/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "109d907b-fde4-439f-98d9-1fbe665cccfb",
              "parentUUID": "6851344e-2bd6-4d37-b4b9-f09e8119d80c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4197,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32905/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32905/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32905/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32905/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32905/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32905/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32905/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32905/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32905/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d4f50a78-6ea2-4490-9e1e-6da7c262837f",
              "parentUUID": "6851344e-2bd6-4d37-b4b9-f09e8119d80c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4189,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32905/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32905/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32905/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32905/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32905/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32905/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32905/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32905/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32905/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7bbd7cb0-dc67-4aaa-9b41-c93d439b7cce",
              "parentUUID": "6851344e-2bd6-4d37-b4b9-f09e8119d80c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "78c1abaa-8563-458e-a30a-9eeec39c70c8",
            "27df6e62-0cb8-46dd-8974-a11f57657f56",
            "0beb8e80-2f46-409e-ab29-6c1029e75d6d",
            "d299b0ca-b3a3-4717-99e4-a4a50ba10db7",
            "a6687b2c-47d8-470b-b120-1ca920d6abfd",
            "a31a483a-b164-42d2-990d-75650385f397",
            "109d907b-fde4-439f-98d9-1fbe665cccfb",
            "d4f50a78-6ea2-4490-9e1e-6da7c262837f",
            "7bbd7cb0-dc67-4aaa-9b41-c93d439b7cce"
          ],
          "pending": [],
          "skipped": [],
          "duration": 37893,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c424b4a7-f1d0-496e-816c-d8374be38601",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4207,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32905/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32905/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32905/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32905/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32905/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32905/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32905/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32905/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32905/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "33166811-07c3-49b4-9178-85b34cb147c0",
              "parentUUID": "c424b4a7-f1d0-496e-816c-d8374be38601",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4198,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32905/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32905/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32905/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32905/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32905/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32905/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32905/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32905/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32905/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "02d57a94-003e-437b-84c4-6cbd8966ac5f",
              "parentUUID": "c424b4a7-f1d0-496e-816c-d8374be38601",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4222,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:32905/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:32905/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:32905/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:32905/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:32905/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32905/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32905/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:32905/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:32905/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32905/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8d89d2eb-5a33-4ce6-8563-581672ba65b8",
              "parentUUID": "c424b4a7-f1d0-496e-816c-d8374be38601",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "33166811-07c3-49b4-9178-85b34cb147c0",
            "02d57a94-003e-437b-84c4-6cbd8966ac5f",
            "8d89d2eb-5a33-4ce6-8563-581672ba65b8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12627,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d19665a1-f149-4bf7-aa9e-231ec1885cbe",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 346,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:32905/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:32905/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:32905/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:32905/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:32905/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:32905/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:32905/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:32905/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32905/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32905/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:32905/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32905/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "c5b0781d-d677-4e7c-87ad-7282d12be7cc",
              "parentUUID": "d19665a1-f149-4bf7-aa9e-231ec1885cbe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 298,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:32905/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:32905/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:32905/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:32905/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:32905/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:32905/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:32905/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:32905/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:32905/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:32905/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:32905/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:32905/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:32905/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "646d8c8a-9279-427d-9f9f-35e89847dfb4",
              "parentUUID": "d19665a1-f149-4bf7-aa9e-231ec1885cbe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c5b0781d-d677-4e7c-87ad-7282d12be7cc",
            "646d8c8a-9279-427d-9f9f-35e89847dfb4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 644,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}