{
  "stats": {
    "suites": 12,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2021-08-20T15:52:18.480Z",
    "end": "2021-08-20T15:52:21.703Z",
    "duration": 3223,
    "testsRegistered": 41,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 12,
    "hasOther": true,
    "skipped": 41,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "789a4a15-52cc-472e-be75-ec00a00914e2",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "347bc369-3c5c-4dfb-98d3-8d6c20630f08",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 387,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {
                "message": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.",
                "estack": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\nError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\n    at pixframe (http://localhost:45549/script.js:6:12)\n    at http://localhost:45549/script.js:13:1",
                "diff": null
              },
              "uuid": "5b15b8b4-b4cc-488e-b0f0-8e9c2e11ad3c",
              "parentUUID": "347bc369-3c5c-4dfb-98d3-8d6c20630f08",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5b15b8b4-b4cc-488e-b0f0-8e9c2e11ad3c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 387,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d6282a36-d13f-4876-bc0f-3b754b013648",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 289,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {
                "message": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.",
                "estack": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\nError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\n    at pixframe (http://localhost:45549/script.js:6:12)\n    at http://localhost:45549/script.js:13:1",
                "diff": null
              },
              "uuid": "d47fbf27-e693-4cc2-93e2-6547d83bbe17",
              "parentUUID": "d6282a36-d13f-4876-bc0f-3b754b013648",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "95f1584b-4257-4aa4-b92d-d452436e7733",
              "parentUUID": "d6282a36-d13f-4876-bc0f-3b754b013648",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "c906ca50-9310-4307-9113-2c56d179abb0",
              "parentUUID": "d6282a36-d13f-4876-bc0f-3b754b013648",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "8fe47f1b-f856-4331-b105-f5b17d746806",
              "parentUUID": "d6282a36-d13f-4876-bc0f-3b754b013648",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "f501c0fa-a9ae-4acc-abea-2202d6bde1c6",
              "parentUUID": "d6282a36-d13f-4876-bc0f-3b754b013648",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "3d518f48-f1d9-447e-9b26-172a76a93562",
              "parentUUID": "d6282a36-d13f-4876-bc0f-3b754b013648",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "b4d346fb-11fb-484e-9c1e-feff7fced057",
              "parentUUID": "d6282a36-d13f-4876-bc0f-3b754b013648",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d47fbf27-e693-4cc2-93e2-6547d83bbe17"
          ],
          "pending": [],
          "skipped": [
            "95f1584b-4257-4aa4-b92d-d452436e7733",
            "c906ca50-9310-4307-9113-2c56d179abb0",
            "8fe47f1b-f856-4331-b105-f5b17d746806",
            "f501c0fa-a9ae-4acc-abea-2202d6bde1c6",
            "3d518f48-f1d9-447e-9b26-172a76a93562",
            "b4d346fb-11fb-484e-9c1e-feff7fced057"
          ],
          "duration": 289,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d18bc5ec-722c-4c42-8bf1-c954e10d51e2",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 292,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {
                "message": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.",
                "estack": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\nError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\n    at pixframe (http://localhost:45549/script.js:6:12)\n    at http://localhost:45549/script.js:13:1",
                "diff": null
              },
              "uuid": "980b3dfd-ebb8-4c2c-99a6-fb933e7fc7fb",
              "parentUUID": "d18bc5ec-722c-4c42-8bf1-c954e10d51e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "08dc4f3d-128d-432a-8ec8-bd10af4826fc",
              "parentUUID": "d18bc5ec-722c-4c42-8bf1-c954e10d51e2",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "980b3dfd-ebb8-4c2c-99a6-fb933e7fc7fb"
          ],
          "pending": [],
          "skipped": [
            "08dc4f3d-128d-432a-8ec8-bd10af4826fc"
          ],
          "duration": 292,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5f95ddc4-a0ef-4f5c-950e-446e3bf16721",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 251,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {
                "message": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.",
                "estack": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\nError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\n    at pixframe (http://localhost:45549/script.js:6:12)\n    at http://localhost:45549/script.js:13:1",
                "diff": null
              },
              "uuid": "d459fb93-307b-442d-b5c3-fd3b94c08ff8",
              "parentUUID": "5f95ddc4-a0ef-4f5c-950e-446e3bf16721",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "dc264109-4b52-45d8-a3c6-3db680826518",
              "parentUUID": "5f95ddc4-a0ef-4f5c-950e-446e3bf16721",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "19cf82aa-86b5-4d09-b6fe-81a1502f5190",
              "parentUUID": "5f95ddc4-a0ef-4f5c-950e-446e3bf16721",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "996da7ee-2755-4b57-bdd1-f07d916290f0",
              "parentUUID": "5f95ddc4-a0ef-4f5c-950e-446e3bf16721",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d459fb93-307b-442d-b5c3-fd3b94c08ff8"
          ],
          "pending": [],
          "skipped": [
            "dc264109-4b52-45d8-a3c6-3db680826518",
            "19cf82aa-86b5-4d09-b6fe-81a1502f5190",
            "996da7ee-2755-4b57-bdd1-f07d916290f0"
          ],
          "duration": 251,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9f7053ab-8796-427d-b741-09fdff7b2c4b",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 205,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {
                "message": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.",
                "estack": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\nError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\n    at pixframe (http://localhost:45549/script.js:6:12)\n    at http://localhost:45549/script.js:13:1",
                "diff": null
              },
              "uuid": "1f702eee-d562-4c6f-8e99-881191ca2cf2",
              "parentUUID": "9f7053ab-8796-427d-b741-09fdff7b2c4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "4590b447-59b3-4396-a496-85111f0aff69",
              "parentUUID": "9f7053ab-8796-427d-b741-09fdff7b2c4b",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "1f702eee-d562-4c6f-8e99-881191ca2cf2"
          ],
          "pending": [],
          "skipped": [
            "4590b447-59b3-4396-a496-85111f0aff69"
          ],
          "duration": 205,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c8d4ddd0-c215-4ce0-81b9-8a2774013cd6",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 217,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {
                "message": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.",
                "estack": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\nError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\n    at pixframe (http://localhost:45549/script.js:6:12)\n    at http://localhost:45549/script.js:13:1",
                "diff": null
              },
              "uuid": "b1da3a59-91f5-4fdd-a50c-459697830e94",
              "parentUUID": "c8d4ddd0-c215-4ce0-81b9-8a2774013cd6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "75fe87ff-27e6-4682-813b-29d2a50829d3",
              "parentUUID": "c8d4ddd0-c215-4ce0-81b9-8a2774013cd6",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b1da3a59-91f5-4fdd-a50c-459697830e94"
          ],
          "pending": [],
          "skipped": [
            "75fe87ff-27e6-4682-813b-29d2a50829d3"
          ],
          "duration": 217,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b87f887e-7e28-4b6c-b4bd-70a2b270ad22",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 205,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {
                "message": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.",
                "estack": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\nError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\n    at pixframe (http://localhost:45549/script.js:6:12)\n    at http://localhost:45549/script.js:13:1",
                "diff": null
              },
              "uuid": "4f60bae8-bb61-4f20-9103-6955977d1710",
              "parentUUID": "b87f887e-7e28-4b6c-b4bd-70a2b270ad22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "171aa326-515a-4df4-9c15-bf70d12171dc",
              "parentUUID": "b87f887e-7e28-4b6c-b4bd-70a2b270ad22",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4f60bae8-bb61-4f20-9103-6955977d1710"
          ],
          "pending": [],
          "skipped": [
            "171aa326-515a-4df4-9c15-bf70d12171dc"
          ],
          "duration": 205,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c89b514f-377b-4c30-9509-0351bf39fece",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 240,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {
                "message": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.",
                "estack": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\nError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\n    at pixframe (http://localhost:45549/script.js:6:12)\n    at http://localhost:45549/script.js:13:1",
                "diff": null
              },
              "uuid": "b8be1730-04dd-4a69-b74a-651895d15d30",
              "parentUUID": "c89b514f-377b-4c30-9509-0351bf39fece",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "da402f76-4ccb-431d-8f65-f02e593ce7b4",
              "parentUUID": "c89b514f-377b-4c30-9509-0351bf39fece",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "40940335-6f3d-4716-b387-d30127392751",
              "parentUUID": "c89b514f-377b-4c30-9509-0351bf39fece",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b8be1730-04dd-4a69-b74a-651895d15d30"
          ],
          "pending": [],
          "skipped": [
            "da402f76-4ccb-431d-8f65-f02e593ce7b4",
            "40940335-6f3d-4716-b387-d30127392751"
          ],
          "duration": 240,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "39b8bd07-26d3-4ec7-8dfa-c4caf5e9fe7c",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 238,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {
                "message": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.",
                "estack": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\nError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\n    at pixframe (http://localhost:45549/script.js:6:12)\n    at http://localhost:45549/script.js:13:1",
                "diff": null
              },
              "uuid": "4b4204df-b3ef-4299-83b3-aaf0de502ded",
              "parentUUID": "39b8bd07-26d3-4ec7-8dfa-c4caf5e9fe7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "886a465d-6c96-4862-be9d-131a85459f1e",
              "parentUUID": "39b8bd07-26d3-4ec7-8dfa-c4caf5e9fe7c",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "2d2ec58b-db91-4757-b557-a50a88e463c0",
              "parentUUID": "39b8bd07-26d3-4ec7-8dfa-c4caf5e9fe7c",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "e0ba69f4-e606-44a9-bdfc-48876ff6cd40",
              "parentUUID": "39b8bd07-26d3-4ec7-8dfa-c4caf5e9fe7c",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4b4204df-b3ef-4299-83b3-aaf0de502ded"
          ],
          "pending": [],
          "skipped": [
            "886a465d-6c96-4862-be9d-131a85459f1e",
            "2d2ec58b-db91-4757-b557-a50a88e463c0",
            "e0ba69f4-e606-44a9-bdfc-48876ff6cd40"
          ],
          "duration": 238,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "79a2b415-3444-4332-8fda-80a20551e5ac",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 269,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.",
                "estack": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\nError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\n    at pixframe (http://localhost:45549/script.js:6:12)\n    at http://localhost:45549/script.js:13:1",
                "diff": null
              },
              "uuid": "e4e6d654-5266-4820-b0d1-45e2f3efcb4a",
              "parentUUID": "79a2b415-3444-4332-8fda-80a20551e5ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "c5986312-e18a-4d22-a6b8-90b75e7a1d6a",
              "parentUUID": "79a2b415-3444-4332-8fda-80a20551e5ac",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {},
              "uuid": "098ae525-3cc3-4320-95ea-bfc8a673b358",
              "parentUUID": "79a2b415-3444-4332-8fda-80a20551e5ac",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "0c74da6c-1c5a-4259-9894-f4d419a670a1",
              "parentUUID": "79a2b415-3444-4332-8fda-80a20551e5ac",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "beb5dd3f-2d7e-49f9-8da5-d6bb5bdbee80",
              "parentUUID": "79a2b415-3444-4332-8fda-80a20551e5ac",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "bea1d2c3-0471-41c2-8c1a-a3241919268e",
              "parentUUID": "79a2b415-3444-4332-8fda-80a20551e5ac",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {},
              "uuid": "c387cb1e-fd1b-4f8b-bf34-4d89b1aee0c2",
              "parentUUID": "79a2b415-3444-4332-8fda-80a20551e5ac",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {},
              "uuid": "efb1565c-f631-40df-8ab6-dc6f8346d762",
              "parentUUID": "79a2b415-3444-4332-8fda-80a20551e5ac",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "f681eb88-7565-42db-b973-6af264a82f55",
              "parentUUID": "79a2b415-3444-4332-8fda-80a20551e5ac",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e4e6d654-5266-4820-b0d1-45e2f3efcb4a"
          ],
          "pending": [],
          "skipped": [
            "c5986312-e18a-4d22-a6b8-90b75e7a1d6a",
            "098ae525-3cc3-4320-95ea-bfc8a673b358",
            "0c74da6c-1c5a-4259-9894-f4d419a670a1",
            "beb5dd3f-2d7e-49f9-8da5-d6bb5bdbee80",
            "bea1d2c3-0471-41c2-8c1a-a3241919268e",
            "c387cb1e-fd1b-4f8b-bf34-4d89b1aee0c2",
            "efb1565c-f631-40df-8ab6-dc6f8346d762",
            "f681eb88-7565-42db-b973-6af264a82f55"
          ],
          "duration": 269,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "adf70b96-45ae-42e4-b2fc-ff79ba598005",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 214,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.",
                "estack": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\nError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\n    at pixframe (http://localhost:45549/script.js:6:12)\n    at http://localhost:45549/script.js:13:1",
                "diff": null
              },
              "uuid": "3bc7b086-1f06-4985-bfa4-425e1591cd12",
              "parentUUID": "adf70b96-45ae-42e4-b2fc-ff79ba598005",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "4381ecaf-3b34-4ed3-b192-e96dfe4dcb67",
              "parentUUID": "adf70b96-45ae-42e4-b2fc-ff79ba598005",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {},
              "uuid": "b1bbfe39-6ab1-47e9-811e-5ab0d3c7c20f",
              "parentUUID": "adf70b96-45ae-42e4-b2fc-ff79ba598005",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3bc7b086-1f06-4985-bfa4-425e1591cd12"
          ],
          "pending": [],
          "skipped": [
            "4381ecaf-3b34-4ed3-b192-e96dfe4dcb67",
            "b1bbfe39-6ab1-47e9-811e-5ab0d3c7c20f"
          ],
          "duration": 214,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "358a3e6f-743e-4b48-afc8-c919489335a5",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 224,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.",
                "estack": "HierarchyRequestError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\nError: Failed to execute 'appendChild' on 'Node': Nodes of type 'div' may not be inserted inside nodes of type 'CANVAS'.\n    at pixframe (http://localhost:45549/script.js:6:12)\n    at http://localhost:45549/script.js:13:1",
                "diff": null
              },
              "uuid": "5c962b2f-73e9-4adb-bb4d-049684486e9e",
              "parentUUID": "358a3e6f-743e-4b48-afc8-c919489335a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "cdd69353-0ec0-4002-ba3f-15156f2e8cec",
              "parentUUID": "358a3e6f-743e-4b48-afc8-c919489335a5",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5c962b2f-73e9-4adb-bb4d-049684486e9e"
          ],
          "pending": [],
          "skipped": [
            "cdd69353-0ec0-4002-ba3f-15156f2e8cec"
          ],
          "duration": 224,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}