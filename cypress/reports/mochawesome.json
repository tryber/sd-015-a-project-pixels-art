{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-08-16T00:24:16.424Z",
    "end": "2021-08-16T00:25:39.221Z",
    "duration": 82797,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "26bf6aa0-9e76-41fb-b869-fc22771c70d8",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "57f6c47a-69b4-43db-b743-ef1031dcdf94",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "20ddadf0-4170-4c17-98c1-967585d8993c",
              "parentUUID": "57f6c47a-69b4-43db-b743-ef1031dcdf94",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "20ddadf0-4170-4c17-98c1-967585d8993c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 210,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4e737d93-4372-42bf-a311-76dad8a15c4a",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "da0558ed-1153-4224-9c3a-3962d3fc0609",
              "parentUUID": "4e737d93-4372-42bf-a311-76dad8a15c4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 204,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "79b11bef-3df3-46bc-bccd-0e562ccc4112",
              "parentUUID": "4e737d93-4372-42bf-a311-76dad8a15c4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 260,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "59d0c2fb-fc1f-42b0-a8f5-f3c1416315ac",
              "parentUUID": "4e737d93-4372-42bf-a311-76dad8a15c4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 222,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "82e71acc-80e6-4063-b192-c19cea893f7d",
              "parentUUID": "4e737d93-4372-42bf-a311-76dad8a15c4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "cb4c104e-bcf7-4c14-a4bc-caa26b04d47f",
              "parentUUID": "4e737d93-4372-42bf-a311-76dad8a15c4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "e1f26d1d-dee1-468a-930f-a056f3fdda20",
              "parentUUID": "4e737d93-4372-42bf-a311-76dad8a15c4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "4fe76d1a-dc29-4984-a91f-7dd49e3f3ced",
              "parentUUID": "4e737d93-4372-42bf-a311-76dad8a15c4a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "da0558ed-1153-4224-9c3a-3962d3fc0609",
            "79b11bef-3df3-46bc-bccd-0e562ccc4112",
            "59d0c2fb-fc1f-42b0-a8f5-f3c1416315ac",
            "82e71acc-80e6-4063-b192-c19cea893f7d",
            "cb4c104e-bcf7-4c14-a4bc-caa26b04d47f",
            "e1f26d1d-dee1-468a-930f-a056f3fdda20",
            "4fe76d1a-dc29-4984-a91f-7dd49e3f3ced"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1194,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7c95bb68-f883-459a-a6b1-a4e9ad38969b",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "6b55434b-87c3-4452-ab51-42036fbd09dc",
              "parentUUID": "7c95bb68-f883-459a-a6b1-a4e9ad38969b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 293,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "0f47f281-143a-48f2-b896-5e8f955ee393",
              "parentUUID": "7c95bb68-f883-459a-a6b1-a4e9ad38969b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b55434b-87c3-4452-ab51-42036fbd09dc",
            "0f47f281-143a-48f2-b896-5e8f955ee393"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 402,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8fcd5bbf-d82e-4d33-a3f4-dd471de5b0ba",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "2c0eb4a3-2497-4c60-8c20-1a2afaf5afd9",
              "parentUUID": "8fcd5bbf-d82e-4d33-a3f4-dd471de5b0ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "7666e897-5d03-428f-a4f5-2b400a90c72f",
              "parentUUID": "8fcd5bbf-d82e-4d33-a3f4-dd471de5b0ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "5ce5d7a7-1c81-4c1b-9186-deb580e1ff21",
              "parentUUID": "8fcd5bbf-d82e-4d33-a3f4-dd471de5b0ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "c84e7cf5-b95a-4d60-8793-acb69d179e0f",
              "parentUUID": "8fcd5bbf-d82e-4d33-a3f4-dd471de5b0ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2c0eb4a3-2497-4c60-8c20-1a2afaf5afd9",
            "7666e897-5d03-428f-a4f5-2b400a90c72f",
            "5ce5d7a7-1c81-4c1b-9186-deb580e1ff21",
            "c84e7cf5-b95a-4d60-8793-acb69d179e0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 547,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "718e4e9d-96ec-44d6-bc23-434f2345a684",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 346,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "ce7ffb8c-d75d-43bd-9e73-eb2fd873fab8",
              "parentUUID": "718e4e9d-96ec-44d6-bc23-434f2345a684",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 292,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "f5aa41ab-0569-4e89-8860-a61761513399",
              "parentUUID": "718e4e9d-96ec-44d6-bc23-434f2345a684",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce7ffb8c-d75d-43bd-9e73-eb2fd873fab8",
            "f5aa41ab-0569-4e89-8860-a61761513399"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 638,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f19a3324-a4f6-4577-ae35-349b5ae55742",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "d54906ae-e199-4a0b-b740-b0448c9f40e0",
              "parentUUID": "f19a3324-a4f6-4577-ae35-349b5ae55742",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "e97853f2-bf6d-400c-bc8e-f2fa0ae9bd23",
              "parentUUID": "f19a3324-a4f6-4577-ae35-349b5ae55742",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d54906ae-e199-4a0b-b740-b0448c9f40e0",
            "e97853f2-bf6d-400c-bc8e-f2fa0ae9bd23"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 224,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "861a161d-b79e-4f09-90bb-52d16fb9a2df",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 472,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "f47efc8a-f85a-46cf-8afb-6b5126298eba",
              "parentUUID": "861a161d-b79e-4f09-90bb-52d16fb9a2df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "55dce824-6a1e-4e23-a2d5-fdbeaece3c2a",
              "parentUUID": "861a161d-b79e-4f09-90bb-52d16fb9a2df",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f47efc8a-f85a-46cf-8afb-6b5126298eba",
            "55dce824-6a1e-4e23-a2d5-fdbeaece3c2a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9639,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e0ba4f35-0fca-4d3f-a307-c6170e3ac3d8",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2431,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "56d2c65a-d7ab-40d5-baf9-82258df4c627",
              "parentUUID": "e0ba4f35-0fca-4d3f-a307-c6170e3ac3d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "d825db70-2089-47a2-9f1c-f386ddd0cbe3",
              "parentUUID": "e0ba4f35-0fca-4d3f-a307-c6170e3ac3d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1399,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "5b22aed1-9a73-4305-bf50-400ccfec4cb4",
              "parentUUID": "e0ba4f35-0fca-4d3f-a307-c6170e3ac3d8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "56d2c65a-d7ab-40d5-baf9-82258df4c627",
            "d825db70-2089-47a2-9f1c-f386ddd0cbe3",
            "5b22aed1-9a73-4305-bf50-400ccfec4cb4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12937,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b639d8f9-b78e-4b33-a0e7-e8740fd4dbde",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "47ec9451-e732-4cd9-ba5b-663330cf4d0e",
              "parentUUID": "b639d8f9-b78e-4b33-a0e7-e8740fd4dbde",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "a67e0c09-55ec-4475-a235-12dc7242f493",
              "parentUUID": "b639d8f9-b78e-4b33-a0e7-e8740fd4dbde",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "e1f20ad9-fc00-4319-a998-8b70d233e10c",
              "parentUUID": "b639d8f9-b78e-4b33-a0e7-e8740fd4dbde",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2424,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "c6d6a1ec-e252-4580-95c1-acf2dbe3855d",
              "parentUUID": "b639d8f9-b78e-4b33-a0e7-e8740fd4dbde",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "47ec9451-e732-4cd9-ba5b-663330cf4d0e",
            "a67e0c09-55ec-4475-a235-12dc7242f493",
            "e1f20ad9-fc00-4319-a998-8b70d233e10c",
            "c6d6a1ec-e252-4580-95c1-acf2dbe3855d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2763,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f3274e33-c39d-4a90-acc0-78194726e277",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4375,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45629/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45629/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45629/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45629/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45629/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45629/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45629/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45629/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45629/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9286546a-25e0-462b-afe3-8d34cc9ae5e7",
              "parentUUID": "f3274e33-c39d-4a90-acc0-78194726e277",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4417,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45629/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45629/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45629/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45629/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45629/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45629/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45629/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45629/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45629/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a3415b24-1ac8-4eb5-8388-75401d2ffc0d",
              "parentUUID": "f3274e33-c39d-4a90-acc0-78194726e277",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4350,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45629/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45629/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45629/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45629/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45629/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45629/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45629/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45629/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45629/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8888d0fe-9d40-4954-81d2-6676c4d4e787",
              "parentUUID": "f3274e33-c39d-4a90-acc0-78194726e277",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4370,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45629/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45629/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45629/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45629/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45629/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45629/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45629/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45629/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45629/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c182caca-6b8c-4b96-8a81-c95825aa4ff3",
              "parentUUID": "f3274e33-c39d-4a90-acc0-78194726e277",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4332,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45629/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45629/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45629/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45629/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45629/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45629/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45629/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45629/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45629/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0b1f233b-0328-42ad-92cf-b45b217c4cf3",
              "parentUUID": "f3274e33-c39d-4a90-acc0-78194726e277",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4328,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45629/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45629/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45629/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45629/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45629/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45629/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45629/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45629/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45629/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4cb6d821-9846-44a7-adf7-9c0062bd77e7",
              "parentUUID": "f3274e33-c39d-4a90-acc0-78194726e277",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4389,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45629/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45629/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45629/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45629/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45629/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45629/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45629/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45629/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45629/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "558d5f4b-bfff-4293-a54a-c814e5024cdd",
              "parentUUID": "f3274e33-c39d-4a90-acc0-78194726e277",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4301,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45629/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45629/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45629/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45629/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45629/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45629/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45629/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45629/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45629/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ef9f90f5-c6ed-48ad-b3d7-83993e70dae6",
              "parentUUID": "f3274e33-c39d-4a90-acc0-78194726e277",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4402,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45629/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45629/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45629/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45629/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45629/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45629/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45629/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45629/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45629/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "973caeab-a2be-45c9-8cd3-485eff4d4b2e",
              "parentUUID": "f3274e33-c39d-4a90-acc0-78194726e277",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9286546a-25e0-462b-afe3-8d34cc9ae5e7",
            "a3415b24-1ac8-4eb5-8388-75401d2ffc0d",
            "8888d0fe-9d40-4954-81d2-6676c4d4e787",
            "c182caca-6b8c-4b96-8a81-c95825aa4ff3",
            "0b1f233b-0328-42ad-92cf-b45b217c4cf3",
            "4cb6d821-9846-44a7-adf7-9c0062bd77e7",
            "558d5f4b-bfff-4293-a54a-c814e5024cdd",
            "ef9f90f5-c6ed-48ad-b3d7-83993e70dae6",
            "973caeab-a2be-45c9-8cd3-485eff4d4b2e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39264,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "19839551-0c15-4cd9-8784-a44684160b72",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4334,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45629/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45629/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45629/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45629/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45629/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45629/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45629/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45629/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45629/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0b8f9130-ad7d-4919-aeb7-64eeabc9ddf0",
              "parentUUID": "19839551-0c15-4cd9-8784-a44684160b72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4386,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45629/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45629/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45629/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45629/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45629/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45629/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45629/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45629/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45629/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "37d2da59-bcd3-4a50-91d3-f200a0a828a4",
              "parentUUID": "19839551-0c15-4cd9-8784-a44684160b72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4326,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45629/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45629/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45629/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45629/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45629/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45629/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45629/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45629/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45629/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45629/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ce359e2b-5051-47ec-bd65-3ef569394f37",
              "parentUUID": "19839551-0c15-4cd9-8784-a44684160b72",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0b8f9130-ad7d-4919-aeb7-64eeabc9ddf0",
            "37d2da59-bcd3-4a50-91d3-f200a0a828a4",
            "ce359e2b-5051-47ec-bd65-3ef569394f37"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13046,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "05829732-2e79-4bb3-abb6-e7b6f9b9757c",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 387,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:45629/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:45629/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:45629/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:45629/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:45629/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:45629/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:45629/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:45629/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45629/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45629/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:45629/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45629/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "0a6679e6-1e67-46cf-8f31-80453c28323c",
              "parentUUID": "05829732-2e79-4bb3-abb6-e7b6f9b9757c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 350,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:45629/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:45629/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:45629/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:45629/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:45629/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:45629/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:45629/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:45629/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45629/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45629/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:45629/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45629/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45629/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "95d5708c-c1a1-4800-a726-b3173aa1f8db",
              "parentUUID": "05829732-2e79-4bb3-abb6-e7b6f9b9757c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0a6679e6-1e67-46cf-8f31-80453c28323c",
            "95d5708c-c1a1-4800-a726-b3173aa1f8db"
          ],
          "pending": [],
          "skipped": [],
          "duration": 737,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}