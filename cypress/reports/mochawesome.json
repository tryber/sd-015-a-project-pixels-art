{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-08-14T23:43:07.739Z",
    "end": "2021-08-14T23:44:34.766Z",
    "duration": 87027,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4c22695c-33d3-4f39-ad4f-a102c1027f05",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e65712cd-11e6-489a-bc56-4ba770631a08",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 281,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "15a5c8f8-31bd-4bfa-896e-cc8305f6e2b9",
              "parentUUID": "e65712cd-11e6-489a-bc56-4ba770631a08",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "15a5c8f8-31bd-4bfa-896e-cc8305f6e2b9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 281,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "27cc06a2-9047-4cbb-9ca0-ef3da2d185f8",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 212,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "06c940fe-729c-4449-97b3-178fbf6397e9",
              "parentUUID": "27cc06a2-9047-4cbb-9ca0-ef3da2d185f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 326,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "c994edf5-1d1a-4e8a-a004-bc800ce0258c",
              "parentUUID": "27cc06a2-9047-4cbb-9ca0-ef3da2d185f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 269,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "d3657161-23b2-4aa1-ac6b-b93eca374b81",
              "parentUUID": "27cc06a2-9047-4cbb-9ca0-ef3da2d185f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 196,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "155107f4-f776-46d8-ab59-3fba5a1c4351",
              "parentUUID": "27cc06a2-9047-4cbb-9ca0-ef3da2d185f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "05a07cfd-fd63-42d9-a70f-2d1738483227",
              "parentUUID": "27cc06a2-9047-4cbb-9ca0-ef3da2d185f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "7776919b-e408-490a-b90f-319b1b395278",
              "parentUUID": "27cc06a2-9047-4cbb-9ca0-ef3da2d185f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "5d7e1fcc-9324-4b69-91c8-4bb5999ce42d",
              "parentUUID": "27cc06a2-9047-4cbb-9ca0-ef3da2d185f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "06c940fe-729c-4449-97b3-178fbf6397e9",
            "c994edf5-1d1a-4e8a-a004-bc800ce0258c",
            "d3657161-23b2-4aa1-ac6b-b93eca374b81",
            "155107f4-f776-46d8-ab59-3fba5a1c4351",
            "05a07cfd-fd63-42d9-a70f-2d1738483227",
            "7776919b-e408-490a-b90f-319b1b395278",
            "5d7e1fcc-9324-4b69-91c8-4bb5999ce42d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1415,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "05e5944a-cbc7-484f-9709-cc9236c5e55d",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "5cede086-ce70-4443-9245-2d3e5e5a6c3f",
              "parentUUID": "05e5944a-cbc7-484f-9709-cc9236c5e55d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 304,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "6bd0f944-dcf7-40a8-b987-72e1a2f681fe",
              "parentUUID": "05e5944a-cbc7-484f-9709-cc9236c5e55d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5cede086-ce70-4443-9245-2d3e5e5a6c3f",
            "6bd0f944-dcf7-40a8-b987-72e1a2f681fe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 413,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a0ea4b8f-762a-4c5d-903f-ced2474f79a9",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "9d2c44eb-2f80-451b-88d8-644e67a3e5fe",
              "parentUUID": "a0ea4b8f-762a-4c5d-903f-ced2474f79a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "0348b899-4665-471e-9eb4-3a4539dc34e4",
              "parentUUID": "a0ea4b8f-762a-4c5d-903f-ced2474f79a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "e9bd44eb-dc12-48a7-9a59-8bc527abf680",
              "parentUUID": "a0ea4b8f-762a-4c5d-903f-ced2474f79a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "95c9a5af-1618-461d-9476-208b5a225799",
              "parentUUID": "a0ea4b8f-762a-4c5d-903f-ced2474f79a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9d2c44eb-2f80-451b-88d8-644e67a3e5fe",
            "0348b899-4665-471e-9eb4-3a4539dc34e4",
            "e9bd44eb-dc12-48a7-9a59-8bc527abf680",
            "95c9a5af-1618-461d-9476-208b5a225799"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 682,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "61187706-a351-44dc-a9d8-c3c17db152ef",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 405,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "3c026872-bd84-48a4-9b5c-29cf504e2c54",
              "parentUUID": "61187706-a351-44dc-a9d8-c3c17db152ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 420,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "7e49abd7-5e31-4054-ac22-0bb5c25c4d23",
              "parentUUID": "61187706-a351-44dc-a9d8-c3c17db152ef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3c026872-bd84-48a4-9b5c-29cf504e2c54",
            "7e49abd7-5e31-4054-ac22-0bb5c25c4d23"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 825,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ce673866-7a97-4887-b006-657e28fd35c7",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "fe13751b-0dc1-4b0f-b58a-c0465eea2152",
              "parentUUID": "ce673866-7a97-4887-b006-657e28fd35c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "2a1d31ae-cb20-4be5-8964-569069fb20aa",
              "parentUUID": "ce673866-7a97-4887-b006-657e28fd35c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fe13751b-0dc1-4b0f-b58a-c0465eea2152",
            "2a1d31ae-cb20-4be5-8964-569069fb20aa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 304,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c171fdd3-ada4-45bb-8aa7-623c8e9c9ffa",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 513,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "94132216-7f03-4260-91e0-a4b2209d881d",
              "parentUUID": "c171fdd3-ada4-45bb-8aa7-623c8e9c9ffa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "abae3895-4489-4b83-b222-7c3d0e9792ff",
              "parentUUID": "c171fdd3-ada4-45bb-8aa7-623c8e9c9ffa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "94132216-7f03-4260-91e0-a4b2209d881d",
            "abae3895-4489-4b83-b222-7c3d0e9792ff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9723,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d6b0dfeb-d00e-4d51-a4ed-b28a07ccf79c",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2396,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "47963a7f-bb3f-4b64-bbc1-9e467416fd51",
              "parentUUID": "d6b0dfeb-d00e-4d51-a4ed-b28a07ccf79c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9023,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "bd35042a-87ec-4db9-b1e6-397b375593c7",
              "parentUUID": "d6b0dfeb-d00e-4d51-a4ed-b28a07ccf79c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1982,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "2badfdd9-96f5-475d-9a4c-257935f52240",
              "parentUUID": "d6b0dfeb-d00e-4d51-a4ed-b28a07ccf79c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "47963a7f-bb3f-4b64-bbc1-9e467416fd51",
            "bd35042a-87ec-4db9-b1e6-397b375593c7",
            "2badfdd9-96f5-475d-9a4c-257935f52240"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13401,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "151b4446-1022-404b-a318-f516f5e40a9f",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 256,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "b0077986-7abf-40f6-a693-e54f8aa07ed1",
              "parentUUID": "151b4446-1022-404b-a318-f516f5e40a9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "53827006-d908-4724-82fd-78c8d67cf259",
              "parentUUID": "151b4446-1022-404b-a318-f516f5e40a9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "29d741f8-cc18-4c2d-8248-6f2106f108d4",
              "parentUUID": "151b4446-1022-404b-a318-f516f5e40a9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2641,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "e0f1cb67-5361-4c44-ba0f-96649e931a8d",
              "parentUUID": "151b4446-1022-404b-a318-f516f5e40a9f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b0077986-7abf-40f6-a693-e54f8aa07ed1",
            "53827006-d908-4724-82fd-78c8d67cf259",
            "29d741f8-cc18-4c2d-8248-6f2106f108d4",
            "e0f1cb67-5361-4c44-ba0f-96649e931a8d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3156,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4c484209-1309-48b5-99ec-79220d36d92b",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4491,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33319/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33319/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33319/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33319/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33319/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33319/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33319/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33319/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33319/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "03c5eb53-670b-4ad4-b099-b8e90de15e51",
              "parentUUID": "4c484209-1309-48b5-99ec-79220d36d92b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4670,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33319/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33319/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33319/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33319/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33319/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33319/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33319/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33319/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33319/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "dc9f1174-5c0f-4092-b823-0087526c7f89",
              "parentUUID": "4c484209-1309-48b5-99ec-79220d36d92b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4623,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33319/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33319/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33319/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33319/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33319/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33319/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33319/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33319/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33319/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "bb1bf267-3de8-4e06-a38d-b8c8ad776c8b",
              "parentUUID": "4c484209-1309-48b5-99ec-79220d36d92b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4530,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33319/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33319/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33319/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33319/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33319/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33319/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33319/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33319/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33319/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d5b543ed-2938-4116-ad59-e23eb57f1496",
              "parentUUID": "4c484209-1309-48b5-99ec-79220d36d92b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4591,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33319/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33319/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33319/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33319/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33319/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33319/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33319/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33319/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33319/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d6f35ee3-6295-4e98-9a84-a57852cef664",
              "parentUUID": "4c484209-1309-48b5-99ec-79220d36d92b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4525,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33319/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33319/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33319/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33319/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33319/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33319/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33319/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33319/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33319/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "750af5da-7922-4d60-ab94-affa3182b7d2",
              "parentUUID": "4c484209-1309-48b5-99ec-79220d36d92b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4554,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33319/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33319/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33319/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33319/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33319/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33319/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33319/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33319/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33319/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "83d81d20-cf11-4cb7-8c6c-e859ba4b4ab2",
              "parentUUID": "4c484209-1309-48b5-99ec-79220d36d92b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4462,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33319/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33319/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33319/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33319/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33319/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33319/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33319/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33319/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33319/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6db9ddde-782a-49a0-9262-187b70459ba4",
              "parentUUID": "4c484209-1309-48b5-99ec-79220d36d92b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4416,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33319/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33319/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33319/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33319/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33319/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33319/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33319/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33319/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33319/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0bbbec3d-13bc-4f17-b0ca-94a30a4506fc",
              "parentUUID": "4c484209-1309-48b5-99ec-79220d36d92b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "03c5eb53-670b-4ad4-b099-b8e90de15e51",
            "dc9f1174-5c0f-4092-b823-0087526c7f89",
            "bb1bf267-3de8-4e06-a38d-b8c8ad776c8b",
            "d5b543ed-2938-4116-ad59-e23eb57f1496",
            "d6f35ee3-6295-4e98-9a84-a57852cef664",
            "750af5da-7922-4d60-ab94-affa3182b7d2",
            "83d81d20-cf11-4cb7-8c6c-e859ba4b4ab2",
            "6db9ddde-782a-49a0-9262-187b70459ba4",
            "0bbbec3d-13bc-4f17-b0ca-94a30a4506fc"
          ],
          "pending": [],
          "skipped": [],
          "duration": 40862,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "df58f893-006c-4a58-932c-e59502da2cc2",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4534,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33319/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33319/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33319/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33319/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33319/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33319/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33319/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33319/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33319/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f91d5098-5e80-4afb-931d-84a925ba4afb",
              "parentUUID": "df58f893-006c-4a58-932c-e59502da2cc2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4501,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33319/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33319/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33319/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33319/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33319/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33319/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33319/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33319/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33319/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6eb6eca8-0cab-436e-98b8-f5ce8397caf9",
              "parentUUID": "df58f893-006c-4a58-932c-e59502da2cc2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4456,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33319/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33319/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33319/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33319/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33319/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33319/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33319/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33319/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33319/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33319/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "57f5cb43-0324-4248-ae79-20525b9dfebb",
              "parentUUID": "df58f893-006c-4a58-932c-e59502da2cc2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f91d5098-5e80-4afb-931d-84a925ba4afb",
            "6eb6eca8-0cab-436e-98b8-f5ce8397caf9",
            "57f5cb43-0324-4248-ae79-20525b9dfebb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13491,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "84ff854d-0185-44af-8e62-eb05f19f6fbe",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 518,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33319/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33319/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33319/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33319/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33319/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33319/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33319/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33319/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33319/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33319/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33319/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33319/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "10238261-d3a5-42f9-9ce7-a4b5a77434c1",
              "parentUUID": "84ff854d-0185-44af-8e62-eb05f19f6fbe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 514,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33319/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33319/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33319/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33319/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33319/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33319/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33319/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33319/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33319/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33319/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33319/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33319/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33319/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "22a154db-ca2c-466f-a4b2-b5f2ba42eb0c",
              "parentUUID": "84ff854d-0185-44af-8e62-eb05f19f6fbe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "10238261-d3a5-42f9-9ce7-a4b5a77434c1",
            "22a154db-ca2c-466f-a4b2-b5f2ba42eb0c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1032,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}