{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-08-16T01:03:29.320Z",
    "end": "2021-08-16T01:04:58.328Z",
    "duration": 89008,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "35e340f2-b2d4-41ee-b978-1fd6320d62e3",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b43c3822-7242-4e22-b984-ddf2c324f779",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 243,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "2d35190b-0880-4748-b441-abc737462a7d",
              "parentUUID": "b43c3822-7242-4e22-b984-ddf2c324f779",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2d35190b-0880-4748-b441-abc737462a7d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 243,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f202183f-2901-4ff1-83cf-711235d0cc7b",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "0bfabeca-1b26-4d1f-923f-9dd09372021e",
              "parentUUID": "f202183f-2901-4ff1-83cf-711235d0cc7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 260,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "b2a3e5c7-6397-48ca-8874-6aa002dc18ce",
              "parentUUID": "f202183f-2901-4ff1-83cf-711235d0cc7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "6a9dbc7a-4ae0-4df7-a46a-70c1995ca698",
              "parentUUID": "f202183f-2901-4ff1-83cf-711235d0cc7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 330,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "88d2053a-228b-4279-9088-cc6758e190d5",
              "parentUUID": "f202183f-2901-4ff1-83cf-711235d0cc7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 228,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "0a8a1596-00fb-4f3d-bdd5-d0510033549d",
              "parentUUID": "f202183f-2901-4ff1-83cf-711235d0cc7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "4f58e87b-230f-4410-bce1-75db4c1f1d72",
              "parentUUID": "f202183f-2901-4ff1-83cf-711235d0cc7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 222,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "1b718129-58c8-41f1-bdd7-8d2191955bcb",
              "parentUUID": "f202183f-2901-4ff1-83cf-711235d0cc7b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0bfabeca-1b26-4d1f-923f-9dd09372021e",
            "b2a3e5c7-6397-48ca-8874-6aa002dc18ce",
            "6a9dbc7a-4ae0-4df7-a46a-70c1995ca698",
            "88d2053a-228b-4279-9088-cc6758e190d5",
            "0a8a1596-00fb-4f3d-bdd5-d0510033549d",
            "4f58e87b-230f-4410-bce1-75db4c1f1d72",
            "1b718129-58c8-41f1-bdd7-8d2191955bcb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1573,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6f6f63aa-fa0a-4069-beb2-d83614278727",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 296,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "8a982f0b-f4cb-4c87-bc60-899cd2c9202c",
              "parentUUID": "6f6f63aa-fa0a-4069-beb2-d83614278727",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 332,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "8e0763f9-3cc5-4713-a6bf-52dce6ab43ad",
              "parentUUID": "6f6f63aa-fa0a-4069-beb2-d83614278727",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8a982f0b-f4cb-4c87-bc60-899cd2c9202c",
            "8e0763f9-3cc5-4713-a6bf-52dce6ab43ad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 628,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c544203a-b592-49b9-b18d-937c89b53d9f",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "cc0f2e5b-e0a1-4400-b9f6-ad608c9d86c5",
              "parentUUID": "c544203a-b592-49b9-b18d-937c89b53d9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "e90a77e9-d42e-4bf0-a0d8-6dcf202976ea",
              "parentUUID": "c544203a-b592-49b9-b18d-937c89b53d9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 327,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "e22bcfe8-ebaa-4315-9c34-7f1f9ddf79ab",
              "parentUUID": "c544203a-b592-49b9-b18d-937c89b53d9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "2f2d612a-c6cb-43dc-9f8c-afee21542e85",
              "parentUUID": "c544203a-b592-49b9-b18d-937c89b53d9f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc0f2e5b-e0a1-4400-b9f6-ad608c9d86c5",
            "e90a77e9-d42e-4bf0-a0d8-6dcf202976ea",
            "e22bcfe8-ebaa-4315-9c34-7f1f9ddf79ab",
            "2f2d612a-c6cb-43dc-9f8c-afee21542e85"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 774,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8df7e61d-7aef-4e2a-b9ac-6375f8a0a4de",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 452,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "7f7deb7b-a1aa-4216-a40a-d06f85268c36",
              "parentUUID": "8df7e61d-7aef-4e2a-b9ac-6375f8a0a4de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 499,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "50dc8b95-1ce6-41c0-be38-5e8b685a6b7d",
              "parentUUID": "8df7e61d-7aef-4e2a-b9ac-6375f8a0a4de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7f7deb7b-a1aa-4216-a40a-d06f85268c36",
            "50dc8b95-1ce6-41c0-be38-5e8b685a6b7d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 951,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dde824bd-13d2-4931-a482-9ab135366016",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "9c086e8e-a614-459a-a952-f8236c535ad3",
              "parentUUID": "dde824bd-13d2-4931-a482-9ab135366016",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "64fa1785-3689-4d4c-8aa0-837c2c87efa2",
              "parentUUID": "dde824bd-13d2-4931-a482-9ab135366016",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c086e8e-a614-459a-a952-f8236c535ad3",
            "64fa1785-3689-4d4c-8aa0-837c2c87efa2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 345,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b3013004-019f-41fa-9819-90d95739c007",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 654,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "2f788afa-1a10-4aad-8a7a-6b12c77d8376",
              "parentUUID": "b3013004-019f-41fa-9819-90d95739c007",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9508,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "d38abb46-dd6a-4f89-8b36-58c9b034e0af",
              "parentUUID": "b3013004-019f-41fa-9819-90d95739c007",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2f788afa-1a10-4aad-8a7a-6b12c77d8376",
            "d38abb46-dd6a-4f89-8b36-58c9b034e0af"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10162,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8521021c-d013-48a4-8852-d8efac8c6eb3",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2613,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "99ee12b4-3419-40b5-91ac-d0bcd020f68e",
              "parentUUID": "8521021c-d013-48a4-8852-d8efac8c6eb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9873,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "14efd1d2-653a-4b64-85e7-2ff0d45d38dc",
              "parentUUID": "8521021c-d013-48a4-8852-d8efac8c6eb3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1417,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "af13628e-37e7-404b-b885-65d7b96ec7dc",
              "parentUUID": "8521021c-d013-48a4-8852-d8efac8c6eb3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "99ee12b4-3419-40b5-91ac-d0bcd020f68e",
            "14efd1d2-653a-4b64-85e7-2ff0d45d38dc",
            "af13628e-37e7-404b-b885-65d7b96ec7dc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13903,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eb55ec43-4399-4fc0-b18a-90a6be58df6f",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 234,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "57db2c33-5d94-4577-bd1b-0f26fceaf20f",
              "parentUUID": "eb55ec43-4399-4fc0-b18a-90a6be58df6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "2ab5f28c-9fb6-49ba-a52f-b2035feb311b",
              "parentUUID": "eb55ec43-4399-4fc0-b18a-90a6be58df6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "e54f07c9-504d-4c19-a557-a87966a1a3ee",
              "parentUUID": "eb55ec43-4399-4fc0-b18a-90a6be58df6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2813,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "2d2b7e95-9daf-4f0f-836b-2fc4ada84574",
              "parentUUID": "eb55ec43-4399-4fc0-b18a-90a6be58df6f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "57db2c33-5d94-4577-bd1b-0f26fceaf20f",
            "2ab5f28c-9fb6-49ba-a52f-b2035feb311b",
            "e54f07c9-504d-4c19-a557-a87966a1a3ee",
            "2d2b7e95-9daf-4f0f-836b-2fc4ada84574"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3309,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "be6f1d9f-a28f-49e2-9098-6b427c73ea81",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4610,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33133/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33133/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33133/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33133/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33133/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33133/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33133/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33133/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33133/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f4bd0334-80d0-401b-b48f-cc9e1c3877ba",
              "parentUUID": "be6f1d9f-a28f-49e2-9098-6b427c73ea81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4511,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33133/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33133/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33133/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33133/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33133/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33133/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33133/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33133/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33133/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ca17126f-1011-4268-9ad7-84fbf5a3c0bf",
              "parentUUID": "be6f1d9f-a28f-49e2-9098-6b427c73ea81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4485,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33133/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33133/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33133/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33133/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33133/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33133/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33133/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33133/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33133/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "dabb03f7-87de-4bf1-9dc9-2ab2a4159c1f",
              "parentUUID": "be6f1d9f-a28f-49e2-9098-6b427c73ea81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4371,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33133/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33133/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33133/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33133/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33133/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33133/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33133/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33133/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33133/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f735109f-4a78-4323-bd36-8b455088022c",
              "parentUUID": "be6f1d9f-a28f-49e2-9098-6b427c73ea81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4428,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33133/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33133/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33133/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33133/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33133/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33133/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33133/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33133/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33133/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4ca49071-3cbd-41e5-ad90-f6898822f3d6",
              "parentUUID": "be6f1d9f-a28f-49e2-9098-6b427c73ea81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4433,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33133/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33133/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33133/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33133/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33133/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33133/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33133/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33133/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33133/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ec176edd-4594-4091-8c02-ece05f99c31a",
              "parentUUID": "be6f1d9f-a28f-49e2-9098-6b427c73ea81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4391,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33133/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33133/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33133/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33133/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33133/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33133/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33133/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33133/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33133/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e82b26df-c7c6-4716-b3ea-564e01b2a3ff",
              "parentUUID": "be6f1d9f-a28f-49e2-9098-6b427c73ea81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4320,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33133/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33133/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33133/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33133/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33133/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33133/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33133/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33133/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33133/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6554cbb7-6d40-451e-b49b-a85f1c927f3e",
              "parentUUID": "be6f1d9f-a28f-49e2-9098-6b427c73ea81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 5906,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33133/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33133/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33133/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33133/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33133/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33133/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33133/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33133/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33133/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c3fa2f6d-9348-48a0-9af6-36cbf6fe3cc9",
              "parentUUID": "be6f1d9f-a28f-49e2-9098-6b427c73ea81",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f4bd0334-80d0-401b-b48f-cc9e1c3877ba",
            "ca17126f-1011-4268-9ad7-84fbf5a3c0bf",
            "dabb03f7-87de-4bf1-9dc9-2ab2a4159c1f",
            "f735109f-4a78-4323-bd36-8b455088022c",
            "4ca49071-3cbd-41e5-ad90-f6898822f3d6",
            "ec176edd-4594-4091-8c02-ece05f99c31a",
            "e82b26df-c7c6-4716-b3ea-564e01b2a3ff",
            "6554cbb7-6d40-451e-b49b-a85f1c927f3e",
            "c3fa2f6d-9348-48a0-9af6-36cbf6fe3cc9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 41455,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d2b95c84-e98d-43f6-a15d-8e1e446f22d3",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4375,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33133/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33133/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33133/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33133/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33133/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33133/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33133/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33133/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33133/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "82798aff-1992-4ddc-b210-9786b27d26d9",
              "parentUUID": "d2b95c84-e98d-43f6-a15d-8e1e446f22d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4503,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33133/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33133/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33133/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33133/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33133/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33133/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33133/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33133/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33133/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1b1582d1-f6ad-4a90-9e45-5c27f959af89",
              "parentUUID": "d2b95c84-e98d-43f6-a15d-8e1e446f22d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4464,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33133/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33133/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33133/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33133/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33133/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33133/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33133/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33133/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33133/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33133/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "eae5d7ac-0626-4820-8c62-00bf452d609b",
              "parentUUID": "d2b95c84-e98d-43f6-a15d-8e1e446f22d3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "82798aff-1992-4ddc-b210-9786b27d26d9",
            "1b1582d1-f6ad-4a90-9e45-5c27f959af89",
            "eae5d7ac-0626-4820-8c62-00bf452d609b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13342,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b031fd36-5763-485d-9d8b-d79f2cd89df1",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 588,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33133/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33133/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33133/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33133/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33133/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33133/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33133/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33133/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33133/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33133/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33133/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33133/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "d703e1b9-07a3-4d01-95fd-e90dba6ad209",
              "parentUUID": "b031fd36-5763-485d-9d8b-d79f2cd89df1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 526,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33133/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33133/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33133/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33133/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33133/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33133/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33133/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33133/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33133/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33133/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33133/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33133/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33133/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "f6247262-1061-43a0-96ba-ece496d68636",
              "parentUUID": "b031fd36-5763-485d-9d8b-d79f2cd89df1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d703e1b9-07a3-4d01-95fd-e90dba6ad209",
            "f6247262-1061-43a0-96ba-ece496d68636"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1114,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}