{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 36,
    "pending": 0,
    "failures": 5,
    "start": "2021-08-17T18:32:06.951Z",
    "end": "2021-08-17T18:33:09.571Z",
    "duration": 62620,
    "testsRegistered": 41,
    "passPercent": 87.8048780487805,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b96a2a55-3c37-46d9-a06a-5bb666760bb6",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fcc5d169-e692-4ed6-a1cf-4515e301c007",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 554,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "3f5fe25b-0af0-49da-8fcf-d4b4f6f5b884",
              "parentUUID": "fcc5d169-e692-4ed6-a1cf-4515e301c007",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3f5fe25b-0af0-49da-8fcf-d4b4f6f5b884"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 554,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "17fc0862-ddb9-4de4-8d9f-a3dc8f94abd8",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 368,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "cd9a7b97-7017-4d55-ba0c-a2bef7ef0322",
              "parentUUID": "17fc0862-ddb9-4de4-8d9f-a3dc8f94abd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 477,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "d6d6b094-e6c4-4d45-be3b-d628910c637c",
              "parentUUID": "17fc0862-ddb9-4de4-8d9f-a3dc8f94abd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 328,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "a35925d6-de92-45de-ba4e-ccec00809bd7",
              "parentUUID": "17fc0862-ddb9-4de4-8d9f-a3dc8f94abd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 276,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "854126aa-cdef-4317-b3c0-d5e38ec1b9d5",
              "parentUUID": "17fc0862-ddb9-4de4-8d9f-a3dc8f94abd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "fce6a9ab-e657-4ab0-b286-7f5505755f46",
              "parentUUID": "17fc0862-ddb9-4de4-8d9f-a3dc8f94abd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 187,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "c848ae74-0829-42a9-93c1-b5bfb951be32",
              "parentUUID": "17fc0862-ddb9-4de4-8d9f-a3dc8f94abd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 225,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "2038c465-691b-4f0a-bf55-45c5ea7a62bf",
              "parentUUID": "17fc0862-ddb9-4de4-8d9f-a3dc8f94abd8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cd9a7b97-7017-4d55-ba0c-a2bef7ef0322",
            "d6d6b094-e6c4-4d45-be3b-d628910c637c",
            "a35925d6-de92-45de-ba4e-ccec00809bd7",
            "854126aa-cdef-4317-b3c0-d5e38ec1b9d5",
            "fce6a9ab-e657-4ab0-b286-7f5505755f46",
            "c848ae74-0829-42a9-93c1-b5bfb951be32",
            "2038c465-691b-4f0a-bf55-45c5ea7a62bf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2037,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5f10d80e-245e-4444-bb06-ef96eb6cf018",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "7038fa61-2931-47f1-a799-a46b5f27a17b",
              "parentUUID": "5f10d80e-245e-4444-bb06-ef96eb6cf018",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 363,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "62c7dc27-ed17-40f9-b1f5-dd4ba6107c6b",
              "parentUUID": "5f10d80e-245e-4444-bb06-ef96eb6cf018",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7038fa61-2931-47f1-a799-a46b5f27a17b",
            "62c7dc27-ed17-40f9-b1f5-dd4ba6107c6b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 617,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "82b13b9f-fc04-44d0-937f-7365613882ea",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 168,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "c0d64714-5e70-49c7-93a8-70df4d293530",
              "parentUUID": "82b13b9f-fc04-44d0-937f-7365613882ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 321,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "9a905dad-533f-40e3-8be6-43a00e696869",
              "parentUUID": "82b13b9f-fc04-44d0-937f-7365613882ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 336,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "0cabef8b-ed42-44ba-b8df-6ba57e06f68e",
              "parentUUID": "82b13b9f-fc04-44d0-937f-7365613882ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 259,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "ce7c0f1c-cfff-438e-85c9-d0e79e787b3b",
              "parentUUID": "82b13b9f-fc04-44d0-937f-7365613882ea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c0d64714-5e70-49c7-93a8-70df4d293530",
            "9a905dad-533f-40e3-8be6-43a00e696869",
            "0cabef8b-ed42-44ba-b8df-6ba57e06f68e",
            "ce7c0f1c-cfff-438e-85c9-d0e79e787b3b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1084,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b2d44ab1-e849-49d9-8c38-f5a277afb217",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 685,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "6cc78af1-33b8-4274-baf0-733eb7c4543b",
              "parentUUID": "b2d44ab1-e849-49d9-8c38-f5a277afb217",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 598,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "1917d345-86da-4561-9d91-0c5f070637af",
              "parentUUID": "b2d44ab1-e849-49d9-8c38-f5a277afb217",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6cc78af1-33b8-4274-baf0-733eb7c4543b",
            "1917d345-86da-4561-9d91-0c5f070637af"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1283,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "52389131-5357-4e50-bbb1-c8d66f8e2c7c",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "0ed40477-7195-4792-8dc7-82cc45c5ec89",
              "parentUUID": "52389131-5357-4e50-bbb1-c8d66f8e2c7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 198,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "9a03d3c7-9ce6-4ab4-a256-d5206239f5b4",
              "parentUUID": "52389131-5357-4e50-bbb1-c8d66f8e2c7c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ed40477-7195-4792-8dc7-82cc45c5ec89",
            "9a03d3c7-9ce6-4ab4-a256-d5206239f5b4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 356,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a56a24eb-c672-4b23-ac18-61d2e534d0d3",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 684,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "eed51906-c737-4513-97b7-3c59cf5091e4",
              "parentUUID": "a56a24eb-c672-4b23-ac18-61d2e534d0d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9533,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "b5fd39d2-9a97-4b10-8159-d808042f28d5",
              "parentUUID": "a56a24eb-c672-4b23-ac18-61d2e534d0d3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eed51906-c737-4513-97b7-3c59cf5091e4",
            "b5fd39d2-9a97-4b10-8159-d808042f28d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10217,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1868266f-443e-46ef-982b-f461efe1d1b4",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2666,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "7352a65a-8a41-4278-bf3f-7d7e41ee0fb3",
              "parentUUID": "1868266f-443e-46ef-982b-f461efe1d1b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9602,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "196e5a47-42bc-4e34-99ef-b7f172b1106b",
              "parentUUID": "1868266f-443e-46ef-982b-f461efe1d1b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2458,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "e0912d24-32c6-44a3-95c7-2e7c90729381",
              "parentUUID": "1868266f-443e-46ef-982b-f461efe1d1b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7352a65a-8a41-4278-bf3f-7d7e41ee0fb3",
            "196e5a47-42bc-4e34-99ef-b7f172b1106b",
            "e0912d24-32c6-44a3-95c7-2e7c90729381"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14726,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "17617956-b7aa-40b6-8a73-464efb651048",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 383,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "78e0f63b-d875-49ea-b59b-88b0c8fd89e6",
              "parentUUID": "17617956-b7aa-40b6-8a73-464efb651048",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 193,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "dbe59c6d-401e-4472-9a30-96d9aa18e878",
              "parentUUID": "17617956-b7aa-40b6-8a73-464efb651048",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "2d2bdacb-5a9a-411f-b867-550465d2df6f",
              "parentUUID": "17617956-b7aa-40b6-8a73-464efb651048",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2894,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "5a5e8f2c-51d3-44c9-8630-acc04c18cd7b",
              "parentUUID": "17617956-b7aa-40b6-8a73-464efb651048",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "78e0f63b-d875-49ea-b59b-88b0c8fd89e6",
            "dbe59c6d-401e-4472-9a30-96d9aa18e878",
            "2d2bdacb-5a9a-411f-b867-550465d2df6f",
            "5a5e8f2c-51d3-44c9-8630-acc04c18cd7b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3631,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "392ebf21-8300-4b94-b6af-afb522e1ab4b",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 346,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "285eb80d-0a9c-4d31-9dd1-2ab65dd1a140",
              "parentUUID": "392ebf21-8300-4b94-b6af-afb522e1ab4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "3c23391a-e310-4377-a36a-12f821a0034b",
              "parentUUID": "392ebf21-8300-4b94-b6af-afb522e1ab4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {},
              "uuid": "a95182db-9089-45a7-9c0b-4f3793263d5d",
              "parentUUID": "392ebf21-8300-4b94-b6af-afb522e1ab4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 247,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "a2347544-b13e-47af-ab32-f6e33b81e668",
              "parentUUID": "392ebf21-8300-4b94-b6af-afb522e1ab4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 237,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "34ed7b13-3927-4fa4-b32c-9966d3230fc0",
              "parentUUID": "392ebf21-8300-4b94-b6af-afb522e1ab4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 241,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "8dd14602-5d22-41a6-8603-f95dc0c61d36",
              "parentUUID": "392ebf21-8300-4b94-b6af-afb522e1ab4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 521,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:33321/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33321/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33321/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33321/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33321/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33321/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33321/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33321/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33321/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33321/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33321/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33321/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33321/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33321/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "751a38ec-7d5c-454c-ac02-0f5edddd1847",
              "parentUUID": "392ebf21-8300-4b94-b6af-afb522e1ab4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 868,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {},
              "uuid": "54da85c0-f047-478a-93b0-75792a72945e",
              "parentUUID": "392ebf21-8300-4b94-b6af-afb522e1ab4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 672,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "d3a1de2d-181f-40a7-b38d-0dcfad39ec5d",
              "parentUUID": "392ebf21-8300-4b94-b6af-afb522e1ab4b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "285eb80d-0a9c-4d31-9dd1-2ab65dd1a140",
            "3c23391a-e310-4377-a36a-12f821a0034b",
            "a95182db-9089-45a7-9c0b-4f3793263d5d",
            "a2347544-b13e-47af-ab32-f6e33b81e668",
            "34ed7b13-3927-4fa4-b32c-9966d3230fc0",
            "8dd14602-5d22-41a6-8603-f95dc0c61d36",
            "54da85c0-f047-478a-93b0-75792a72945e",
            "d3a1de2d-181f-40a7-b38d-0dcfad39ec5d"
          ],
          "failures": [
            "751a38ec-7d5c-454c-ac02-0f5edddd1847"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3467,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8d2566c7-bb91-404b-9c75-02bef21aaa58",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 5163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {},
              "uuid": "84bccfe9-e87c-43de-b2cb-2e41f1778c1a",
              "parentUUID": "8d2566c7-bb91-404b-9c75-02bef21aaa58",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4902,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '16', expected '25'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '16', expected '25'.\n    at cypressErr (http://localhost:33321/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33321/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33321/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33321/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33321/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33321/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33321/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33321/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33321/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33321/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33321/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33321/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33321/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "819c9ac1-aff3-4cde-be65-e2cde76004ce",
              "parentUUID": "8d2566c7-bb91-404b-9c75-02bef21aaa58",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 11700,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Too many elements found. Found '2601', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Too many elements found. Found '2601', expected '2500'.\n    at cypressErr (http://localhost:33321/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33321/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33321/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33321/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33321/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33321/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33321/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33321/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33321/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33321/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33321/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33321/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33321/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b45ccd09-9b77-4a0e-8636-fda3cd236b98",
              "parentUUID": "8d2566c7-bb91-404b-9c75-02bef21aaa58",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "84bccfe9-e87c-43de-b2cb-2e41f1778c1a"
          ],
          "failures": [
            "819c9ac1-aff3-4cde-be65-e2cde76004ce",
            "b45ccd09-9b77-4a0e-8636-fda3cd236b98"
          ],
          "pending": [],
          "skipped": [],
          "duration": 21765,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bc851389-683b-4df1-ad85-e28a6e830413",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 742,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33321/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33321/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33321/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33321/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33321/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33321/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33321/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33321/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33321/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33321/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33321/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33321/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33321/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33321/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "5cd2a177-7047-44e1-9f4a-4b391f5a9d51",
              "parentUUID": "bc851389-683b-4df1-ad85-e28a6e830413",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 457,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33321/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33321/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33321/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33321/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33321/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33321/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33321/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33321/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33321/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33321/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33321/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33321/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33321/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33321/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "d1569f92-dbb1-4106-9271-4202517c5aca",
              "parentUUID": "bc851389-683b-4df1-ad85-e28a6e830413",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5cd2a177-7047-44e1-9f4a-4b391f5a9d51",
            "d1569f92-dbb1-4106-9271-4202517c5aca"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1199,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}