{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 30,
    "pending": 0,
    "failures": 11,
    "start": "2021-08-13T19:37:29.860Z",
    "end": "2021-08-13T19:38:42.040Z",
    "duration": 72180,
    "testsRegistered": 41,
    "passPercent": 73.17073170731707,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "03545068-23ac-45a7-bf8d-0169fbeeb810",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7482631a-e057-41fb-bd7a-69540e06bfd3",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 704,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "65b6c64c-02ec-4d2a-a71d-ed5ed088e649",
              "parentUUID": "7482631a-e057-41fb-bd7a-69540e06bfd3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "65b6c64c-02ec-4d2a-a71d-ed5ed088e649"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 704,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3d4a9c63-669a-463d-a300-ad1f306bf77a",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 67,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "79d4bb60-265d-419e-8f2d-6a837794a453",
              "parentUUID": "3d4a9c63-669a-463d-a300-ad1f306bf77a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "b12929fa-3064-498f-8cc2-e614dc3ad12d",
              "parentUUID": "3d4a9c63-669a-463d-a300-ad1f306bf77a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 68,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "b08f4b64-5883-4466-9b23-898f4777fd2e",
              "parentUUID": "3d4a9c63-669a-463d-a300-ad1f306bf77a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 55,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "885cb099-8c48-4f21-973c-cab6fb809dad",
              "parentUUID": "3d4a9c63-669a-463d-a300-ad1f306bf77a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 54,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "c865178c-9a28-4eb1-b5a6-173b40021354",
              "parentUUID": "3d4a9c63-669a-463d-a300-ad1f306bf77a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 49,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "c9dc57b0-754a-449b-be98-b541583bb886",
              "parentUUID": "3d4a9c63-669a-463d-a300-ad1f306bf77a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 44,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "ef40b6aa-4588-4677-98e5-67923125519d",
              "parentUUID": "3d4a9c63-669a-463d-a300-ad1f306bf77a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "79d4bb60-265d-419e-8f2d-6a837794a453",
            "b12929fa-3064-498f-8cc2-e614dc3ad12d",
            "b08f4b64-5883-4466-9b23-898f4777fd2e",
            "885cb099-8c48-4f21-973c-cab6fb809dad",
            "c865178c-9a28-4eb1-b5a6-173b40021354",
            "c9dc57b0-754a-449b-be98-b541583bb886",
            "ef40b6aa-4588-4677-98e5-67923125519d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 417,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5241d8bc-0012-494f-869c-dda19a6504a8",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 62,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "0230a572-89c1-4880-96af-5e5021a519ba",
              "parentUUID": "5241d8bc-0012-494f-869c-dda19a6504a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "fcc19175-88c6-4263-86e5-1b8cb3e29622",
              "parentUUID": "5241d8bc-0012-494f-869c-dda19a6504a8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0230a572-89c1-4880-96af-5e5021a519ba",
            "fcc19175-88c6-4263-86e5-1b8cb3e29622"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 162,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f40f2599-c095-487b-98b4-ddeb74d59a1b",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 43,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "a58cfac9-a9ea-4296-b8a8-2fe8c740af88",
              "parentUUID": "f40f2599-c095-487b-98b4-ddeb74d59a1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 72,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "5f1a7a72-b3bd-48e6-ab5b-716a8074565a",
              "parentUUID": "f40f2599-c095-487b-98b4-ddeb74d59a1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "8035aeca-2c36-4531-8150-8c0284a55711",
              "parentUUID": "f40f2599-c095-487b-98b4-ddeb74d59a1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 47,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "815befd0-4c85-4a8f-a71b-59e40c1fb4e2",
              "parentUUID": "f40f2599-c095-487b-98b4-ddeb74d59a1b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a58cfac9-a9ea-4296-b8a8-2fe8c740af88",
            "5f1a7a72-b3bd-48e6-ab5b-716a8074565a",
            "8035aeca-2c36-4531-8150-8c0284a55711",
            "815befd0-4c85-4a8f-a71b-59e40c1fb4e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 266,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "549d6e06-23a0-41c6-a270-0d912e2ad885",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 175,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "36aa046a-c816-405c-ac98-7dffbdd73b46",
              "parentUUID": "549d6e06-23a0-41c6-a270-0d912e2ad885",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "b20b7df0-fd77-4e8a-8b6c-8f6586133299",
              "parentUUID": "549d6e06-23a0-41c6-a270-0d912e2ad885",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "36aa046a-c816-405c-ac98-7dffbdd73b46",
            "b20b7df0-fd77-4e8a-8b6c-8f6586133299"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 342,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "220ce073-775d-4eaf-ad9b-0cc2a9393ed3",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 54,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "48939781-f04d-4dc3-8ffd-545b28a0cd6c",
              "parentUUID": "220ce073-775d-4eaf-ad9b-0cc2a9393ed3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 49,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "5554b222-37c2-495b-9a48-75479aab2069",
              "parentUUID": "220ce073-775d-4eaf-ad9b-0cc2a9393ed3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "48939781-f04d-4dc3-8ffd-545b28a0cd6c",
            "5554b222-37c2-495b-9a48-75479aab2069"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 103,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2aa08cf9-584c-4412-84ac-c6d84e2f1423",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 442,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "d136a337-686f-4888-87a0-6ca1e2befb08",
              "parentUUID": "2aa08cf9-584c-4412-84ac-c6d84e2f1423",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9276,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "544c7fe1-1005-49a9-a7ef-dbd89e44f849",
              "parentUUID": "2aa08cf9-584c-4412-84ac-c6d84e2f1423",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d136a337-686f-4888-87a0-6ca1e2befb08",
            "544c7fe1-1005-49a9-a7ef-dbd89e44f849"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9718,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bcf066ac-6ef7-4c42-95fc-0e9489fda3bd",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2278,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "e9ef24bd-b1fa-4834-8f8f-dd35f3b901b2",
              "parentUUID": "bcf066ac-6ef7-4c42-95fc-0e9489fda3bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9082,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "6a0f70e5-d5b4-4b9f-a9c0-992a59de16a0",
              "parentUUID": "bcf066ac-6ef7-4c42-95fc-0e9489fda3bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1332,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "de3c3c21-c6cd-450d-acb2-ab5f70ce80d8",
              "parentUUID": "bcf066ac-6ef7-4c42-95fc-0e9489fda3bd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e9ef24bd-b1fa-4834-8f8f-dd35f3b901b2",
            "6a0f70e5-d5b4-4b9f-a9c0-992a59de16a0",
            "de3c3c21-c6cd-450d-acb2-ab5f70ce80d8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12692,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5cdf09dc-70df-4221-9b6a-d8d3f007fb1b",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 4198,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#clear-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#clear-board', but never found it.\n    at cypressErr (http://localhost:35081/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35081/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35081/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35081/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35081/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35081/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35081/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35081/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35081/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35081/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35081/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35081/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35081/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "446468ae-5b51-4225-bfd2-335881e716f1",
              "parentUUID": "5cdf09dc-70df-4221-9b6a-d8d3f007fb1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4153,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#clear-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#clear-board', but never found it.\n    at cypressErr (http://localhost:35081/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35081/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35081/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35081/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35081/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35081/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35081/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35081/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35081/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35081/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35081/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35081/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35081/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e4e0682d-d78c-44ec-9d52-38d44b03ed9a",
              "parentUUID": "5cdf09dc-70df-4221-9b6a-d8d3f007fb1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 4179,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#clear-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#clear-board', but never found it.\n    at cypressErr (http://localhost:35081/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35081/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35081/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35081/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35081/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35081/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35081/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35081/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35081/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35081/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35081/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35081/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35081/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7de340ab-25f1-4f30-9afe-3f9dfcdc8590",
              "parentUUID": "5cdf09dc-70df-4221-9b6a-d8d3f007fb1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 6224,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#clear-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#clear-board', but never found it.\n    at cypressErr (http://localhost:35081/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35081/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35081/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35081/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35081/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35081/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35081/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35081/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35081/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35081/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35081/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35081/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35081/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6ce698ad-eb8e-45c4-901b-812d160130d1",
              "parentUUID": "5cdf09dc-70df-4221-9b6a-d8d3f007fb1b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "446468ae-5b51-4225-bfd2-335881e716f1",
            "e4e0682d-d78c-44ec-9d52-38d44b03ed9a",
            "7de340ab-25f1-4f30-9afe-3f9dfcdc8590",
            "6ce698ad-eb8e-45c4-901b-812d160130d1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 18754,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f1dea06c-41db-4d5f-9cfa-c446d3c11e9e",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 88,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "25c22b30-3999-47a7-8b5e-46d158c2109e",
              "parentUUID": "f1dea06c-41db-4d5f-9cfa-c446d3c11e9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 56,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "bad467c2-1a1e-4360-b5db-890009c66c79",
              "parentUUID": "f1dea06c-41db-4d5f-9cfa-c446d3c11e9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4181,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:35081/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35081/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35081/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35081/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35081/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35081/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35081/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35081/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35081/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35081/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35081/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35081/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35081/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "69b4c7eb-53ab-4293-848e-c322957fa8ba",
              "parentUUID": "f1dea06c-41db-4d5f-9cfa-c446d3c11e9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4146,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find content: '/vqv/i' within the element: <input#generate-board> but never did.",
                "estack": "CypressError: Timed out retrying: Expected to find content: '/vqv/i' within the element: <input#generate-board> but never did.\n    at cypressErr (http://localhost:35081/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35081/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35081/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35081/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35081/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35081/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35081/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35081/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35081/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35081/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35081/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35081/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35081/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a41eaf7d-69c7-4d3a-96e0-cc7db7ff6bce",
              "parentUUID": "f1dea06c-41db-4d5f-9cfa-c446d3c11e9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 88,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "b680b353-43f4-4817-a3b3-3e955e5ce214",
              "parentUUID": "f1dea06c-41db-4d5f-9cfa-c446d3c11e9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "a11243df-d3b1-477d-90a7-95678f78174f",
              "parentUUID": "f1dea06c-41db-4d5f-9cfa-c446d3c11e9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 253,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:35081/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:35081/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35081/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:35081/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:35081/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:35081/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:35081/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:35081/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35081/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35081/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:35081/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35081/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35081/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35081/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "666c5acd-eb99-4461-ba81-827872858dcc",
              "parentUUID": "f1dea06c-41db-4d5f-9cfa-c446d3c11e9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4592,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.\n    at cypressErr (http://localhost:35081/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35081/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35081/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35081/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35081/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35081/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35081/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35081/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35081/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35081/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35081/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35081/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35081/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ef2fe7cb-ef6e-4f8a-88e4-b2f8ac143bef",
              "parentUUID": "f1dea06c-41db-4d5f-9cfa-c446d3c11e9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4565,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.\n    at cypressErr (http://localhost:35081/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35081/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35081/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35081/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35081/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35081/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35081/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35081/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35081/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35081/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35081/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35081/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35081/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0ab7ee5b-d577-4ee8-adc7-99775fd1f04c",
              "parentUUID": "f1dea06c-41db-4d5f-9cfa-c446d3c11e9e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "25c22b30-3999-47a7-8b5e-46d158c2109e",
            "bad467c2-1a1e-4360-b5db-890009c66c79",
            "b680b353-43f4-4817-a3b3-3e955e5ce214",
            "a11243df-d3b1-477d-90a7-95678f78174f"
          ],
          "failures": [
            "69b4c7eb-53ab-4293-848e-c322957fa8ba",
            "a41eaf7d-69c7-4d3a-96e0-cc7db7ff6bce",
            "666c5acd-eb99-4461-ba81-827872858dcc",
            "ef2fe7cb-ef6e-4f8a-88e4-b2f8ac143bef",
            "0ab7ee5b-d577-4ee8-adc7-99775fd1f04c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 18040,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6427e4ad-bcd9-4a70-b0a8-81eceddea3e3",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4581,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:35081/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35081/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35081/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35081/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35081/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35081/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35081/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35081/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35081/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35081/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35081/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35081/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35081/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7dfea420-fdf1-4306-8b30-ddca406570ee",
              "parentUUID": "6427e4ad-bcd9-4a70-b0a8-81eceddea3e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 454,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "bf14f3fb-c1bc-4410-889e-33c84a1284d1",
              "parentUUID": "6427e4ad-bcd9-4a70-b0a8-81eceddea3e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4526,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:35081/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35081/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35081/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35081/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35081/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35081/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35081/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35081/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35081/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35081/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35081/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35081/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35081/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e1763e13-9f7e-4eb4-98c6-d61bb3a310ec",
              "parentUUID": "6427e4ad-bcd9-4a70-b0a8-81eceddea3e3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bf14f3fb-c1bc-4410-889e-33c84a1284d1"
          ],
          "failures": [
            "7dfea420-fdf1-4306-8b30-ddca406570ee",
            "e1763e13-9f7e-4eb4-98c6-d61bb3a310ec"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9561,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "32d4dea6-7e22-4ea1-9cf2-59cee3e9c02b",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 431,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "5773ae09-cb27-4677-a4b4-d80bf5578bf7",
              "parentUUID": "32d4dea6-7e22-4ea1-9cf2-59cee3e9c02b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 283,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "09365f8a-b184-42c3-bcb3-3e1415a5895b",
              "parentUUID": "32d4dea6-7e22-4ea1-9cf2-59cee3e9c02b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5773ae09-cb27-4677-a4b4-d80bf5578bf7",
            "09365f8a-b184-42c3-bcb3-3e1415a5895b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 714,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}