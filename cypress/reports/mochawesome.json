{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-08-15T15:33:16.635Z",
    "end": "2021-08-15T15:34:38.879Z",
    "duration": 82244,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cf76ed73-169a-4a4f-b056-45d79c2756d3",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b7e09ac5-faea-4152-a493-c36b16a6ec7e",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "5ead7b44-1586-4b0e-8422-8a101904c57e",
              "parentUUID": "b7e09ac5-faea-4152-a493-c36b16a6ec7e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5ead7b44-1586-4b0e-8422-8a101904c57e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 210,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "41ba15bf-8b20-4a35-9d24-a7dec727cb89",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "25f30c19-465c-4ed4-882a-5d29a7eea892",
              "parentUUID": "41ba15bf-8b20-4a35-9d24-a7dec727cb89",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "ba2ff720-042a-4f7e-8651-bfaa28fd27bd",
              "parentUUID": "41ba15bf-8b20-4a35-9d24-a7dec727cb89",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "35ebb005-14e2-4aa3-b328-c2317d6da371",
              "parentUUID": "41ba15bf-8b20-4a35-9d24-a7dec727cb89",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 204,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "0e4e93b0-cc4c-4891-9195-54ea246433a3",
              "parentUUID": "41ba15bf-8b20-4a35-9d24-a7dec727cb89",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "db6bf5b3-09ae-4dc5-a597-64aca93d0bb7",
              "parentUUID": "41ba15bf-8b20-4a35-9d24-a7dec727cb89",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "aad5a736-8635-4b55-b4ea-8e959556896f",
              "parentUUID": "41ba15bf-8b20-4a35-9d24-a7dec727cb89",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 86,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "dbcf2f6b-e4cc-4463-90bd-ed292057a02c",
              "parentUUID": "41ba15bf-8b20-4a35-9d24-a7dec727cb89",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "25f30c19-465c-4ed4-882a-5d29a7eea892",
            "ba2ff720-042a-4f7e-8651-bfaa28fd27bd",
            "35ebb005-14e2-4aa3-b328-c2317d6da371",
            "0e4e93b0-cc4c-4891-9195-54ea246433a3",
            "db6bf5b3-09ae-4dc5-a597-64aca93d0bb7",
            "aad5a736-8635-4b55-b4ea-8e959556896f",
            "dbcf2f6b-e4cc-4463-90bd-ed292057a02c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1100,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6b34a22b-d3ea-427d-bc78-98bf71cd9b47",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "1c581aaf-eabb-40e8-abc8-742739d58445",
              "parentUUID": "6b34a22b-d3ea-427d-bc78-98bf71cd9b47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "530a77eb-19ad-48e9-a0cd-5fe13dbef40c",
              "parentUUID": "6b34a22b-d3ea-427d-bc78-98bf71cd9b47",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c581aaf-eabb-40e8-abc8-742739d58445",
            "530a77eb-19ad-48e9-a0cd-5fe13dbef40c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 313,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c7f87b99-5234-40bd-b3aa-4116da22f4b9",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "46b26698-5b72-46c9-b161-ae40515b2dfc",
              "parentUUID": "c7f87b99-5234-40bd-b3aa-4116da22f4b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "90c3c4fb-a392-4a31-aca0-9a0c5e0d9b56",
              "parentUUID": "c7f87b99-5234-40bd-b3aa-4116da22f4b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 281,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "c0cf63e5-81e9-4b1a-b59f-7eca2080994c",
              "parentUUID": "c7f87b99-5234-40bd-b3aa-4116da22f4b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "407f2878-6b0b-4245-a4c3-1d26698f1f9e",
              "parentUUID": "c7f87b99-5234-40bd-b3aa-4116da22f4b9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "46b26698-5b72-46c9-b161-ae40515b2dfc",
            "90c3c4fb-a392-4a31-aca0-9a0c5e0d9b56",
            "c0cf63e5-81e9-4b1a-b59f-7eca2080994c",
            "407f2878-6b0b-4245-a4c3-1d26698f1f9e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 675,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bd810f7d-b9bf-4e04-8e68-4b3d9b3d5aed",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 381,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "05828fb4-87bb-49a2-b0d6-50d0e4d73746",
              "parentUUID": "bd810f7d-b9bf-4e04-8e68-4b3d9b3d5aed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "d7d79f75-32fd-4253-9f14-f6a55e52b955",
              "parentUUID": "bd810f7d-b9bf-4e04-8e68-4b3d9b3d5aed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "05828fb4-87bb-49a2-b0d6-50d0e4d73746",
            "d7d79f75-32fd-4253-9f14-f6a55e52b955"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 663,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "81b876fd-a018-47ca-9ef6-3a9b5519a6f5",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "83c6a6ea-8ee5-4f3d-854c-cafeb7490fb8",
              "parentUUID": "81b876fd-a018-47ca-9ef6-3a9b5519a6f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 86,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "a3003c53-d69e-4cc3-93ac-f50665444564",
              "parentUUID": "81b876fd-a018-47ca-9ef6-3a9b5519a6f5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83c6a6ea-8ee5-4f3d-854c-cafeb7490fb8",
            "a3003c53-d69e-4cc3-93ac-f50665444564"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 179,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cc3cc88f-bd0e-4814-ab0d-75f88a4f5c92",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 457,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "1c6c7b47-24ba-4b9e-80dd-e1686cde7d6d",
              "parentUUID": "cc3cc88f-bd0e-4814-ab0d-75f88a4f5c92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9054,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "7c6e4cad-e1cf-42bd-abb5-544afe276f4e",
              "parentUUID": "cc3cc88f-bd0e-4814-ab0d-75f88a4f5c92",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c6c7b47-24ba-4b9e-80dd-e1686cde7d6d",
            "7c6e4cad-e1cf-42bd-abb5-544afe276f4e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9511,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "66e41f15-d445-416e-821b-f43319a3636c",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2277,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "dabf9f7f-c749-4eb2-ae91-9e6d4fd7b2d0",
              "parentUUID": "66e41f15-d445-416e-821b-f43319a3636c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8600,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "86cf5fa9-9034-4eda-81bd-e724f8971447",
              "parentUUID": "66e41f15-d445-416e-821b-f43319a3636c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1483,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "d21e0aed-74d1-427c-b2c4-e1622a2f28c7",
              "parentUUID": "66e41f15-d445-416e-821b-f43319a3636c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dabf9f7f-c749-4eb2-ae91-9e6d4fd7b2d0",
            "86cf5fa9-9034-4eda-81bd-e724f8971447",
            "d21e0aed-74d1-427c-b2c4-e1622a2f28c7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12360,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5a4ab975-7e75-434a-974b-4784a953a99e",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "d29eb69b-c19b-455b-91d9-897eadcb054e",
              "parentUUID": "5a4ab975-7e75-434a-974b-4784a953a99e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "0ea8c092-e502-4326-abf8-7e6a4b5178f7",
              "parentUUID": "5a4ab975-7e75-434a-974b-4784a953a99e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "b751c048-7581-4928-a60f-9e61bf3a09e5",
              "parentUUID": "5a4ab975-7e75-434a-974b-4784a953a99e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2325,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "1dc696d7-3194-4d42-bcef-81c09d917c4f",
              "parentUUID": "5a4ab975-7e75-434a-974b-4784a953a99e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d29eb69b-c19b-455b-91d9-897eadcb054e",
            "0ea8c092-e502-4326-abf8-7e6a4b5178f7",
            "b751c048-7581-4928-a60f-9e61bf3a09e5",
            "1dc696d7-3194-4d42-bcef-81c09d917c4f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2714,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "12943240-d0bf-4b75-bdc2-c8a13a537ebb",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4398,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46515/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46515/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46515/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46515/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46515/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46515/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46515/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46515/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46515/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5d9efa1b-bc0b-4f33-9fcd-a479487f563e",
              "parentUUID": "12943240-d0bf-4b75-bdc2-c8a13a537ebb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4365,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46515/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46515/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46515/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46515/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46515/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46515/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46515/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46515/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46515/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "79908640-e517-4802-ac05-fb3a86fb6dc5",
              "parentUUID": "12943240-d0bf-4b75-bdc2-c8a13a537ebb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4330,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46515/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46515/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46515/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46515/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46515/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46515/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46515/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46515/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46515/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d5c6abe6-2345-4d98-84bd-de72495bcc94",
              "parentUUID": "12943240-d0bf-4b75-bdc2-c8a13a537ebb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4439,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46515/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46515/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46515/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46515/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46515/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46515/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46515/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46515/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46515/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d62361ed-bdec-4924-901e-0ea4d702eaec",
              "parentUUID": "12943240-d0bf-4b75-bdc2-c8a13a537ebb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4460,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46515/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46515/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46515/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46515/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46515/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46515/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46515/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46515/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46515/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0800d92a-fe38-457b-af04-7654227c913c",
              "parentUUID": "12943240-d0bf-4b75-bdc2-c8a13a537ebb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4370,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46515/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46515/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46515/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46515/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46515/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46515/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46515/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46515/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46515/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ef39516a-5ae7-4d03-9fc9-2ca16c81dbeb",
              "parentUUID": "12943240-d0bf-4b75-bdc2-c8a13a537ebb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4375,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46515/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46515/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46515/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46515/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46515/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46515/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46515/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46515/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46515/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0b70cc72-3ff5-406b-a36c-fe6da1115522",
              "parentUUID": "12943240-d0bf-4b75-bdc2-c8a13a537ebb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4474,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46515/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46515/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46515/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46515/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46515/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46515/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46515/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46515/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46515/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9779f146-04a6-4c3c-ab80-5de9c25e519a",
              "parentUUID": "12943240-d0bf-4b75-bdc2-c8a13a537ebb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4342,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46515/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46515/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46515/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46515/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46515/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46515/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46515/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46515/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46515/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d16c178a-beb0-4f9e-9ee6-9ebdc67eda65",
              "parentUUID": "12943240-d0bf-4b75-bdc2-c8a13a537ebb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5d9efa1b-bc0b-4f33-9fcd-a479487f563e",
            "79908640-e517-4802-ac05-fb3a86fb6dc5",
            "d5c6abe6-2345-4d98-84bd-de72495bcc94",
            "d62361ed-bdec-4924-901e-0ea4d702eaec",
            "0800d92a-fe38-457b-af04-7654227c913c",
            "ef39516a-5ae7-4d03-9fc9-2ca16c81dbeb",
            "0b70cc72-3ff5-406b-a36c-fe6da1115522",
            "9779f146-04a6-4c3c-ab80-5de9c25e519a",
            "d16c178a-beb0-4f9e-9ee6-9ebdc67eda65"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39553,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e35dc18e-419d-45cb-85b4-a5891a4dc378",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4428,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46515/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46515/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46515/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46515/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46515/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46515/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46515/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46515/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46515/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4af8ff2b-381c-4f68-b97a-930f22af0f42",
              "parentUUID": "e35dc18e-419d-45cb-85b4-a5891a4dc378",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4349,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46515/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46515/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46515/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46515/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46515/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46515/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46515/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46515/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46515/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "81a838ca-5ce6-4907-a18f-3e332f6a0a0a",
              "parentUUID": "e35dc18e-419d-45cb-85b4-a5891a4dc378",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4455,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46515/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46515/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46515/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46515/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46515/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46515/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46515/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46515/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46515/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46515/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6c1d39f4-4902-4823-9ea5-528c7da3771b",
              "parentUUID": "e35dc18e-419d-45cb-85b4-a5891a4dc378",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4af8ff2b-381c-4f68-b97a-930f22af0f42",
            "81a838ca-5ce6-4907-a18f-3e332f6a0a0a",
            "6c1d39f4-4902-4823-9ea5-528c7da3771b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13232,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e7b46f77-f293-4208-83f7-d8b8560701e9",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 399,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:46515/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:46515/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:46515/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:46515/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:46515/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:46515/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:46515/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:46515/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46515/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46515/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:46515/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46515/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "704eb682-9a3b-44a2-992a-347784459c36",
              "parentUUID": "e7b46f77-f293-4208-83f7-d8b8560701e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 381,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:46515/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:46515/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:46515/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:46515/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:46515/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:46515/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:46515/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:46515/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46515/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46515/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:46515/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46515/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46515/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "2ea2b392-2f28-4202-85a0-5a40b3ae842c",
              "parentUUID": "e7b46f77-f293-4208-83f7-d8b8560701e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "704eb682-9a3b-44a2-992a-347784459c36",
            "2ea2b392-2f28-4202-85a0-5a40b3ae842c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 780,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}